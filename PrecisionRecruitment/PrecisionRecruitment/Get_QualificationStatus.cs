///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace PrecisionRecruitment
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Get_QualificationStatus recording.
    /// </summary>
    [TestModule("8080cd65-37d3-431e-8bd9-4ff840801312", ModuleType.Recording, 1)]
    public partial class Get_QualificationStatus : ITestModule
    {
        /// <summary>
        /// Holds an instance of the PrecisionRecruitmentRepository repository.
        /// </summary>
        public static PrecisionRecruitmentRepository repo = PrecisionRecruitmentRepository.Instance;

        static Get_QualificationStatus instance = new Get_QualificationStatus();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Get_QualificationStatus()
        {
            DOM = "";
            studyProtocolName = "";
            testIdentifier = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Get_QualificationStatus Instance
        {
            get { return instance; }
        }

#region Variables

        string _studyProtocolName;

        /// <summary>
        /// Gets or sets the value of variable studyProtocolName.
        /// </summary>
        [TestVariable("9a7cc726-08cf-4f29-b6c3-fa8118af18e5")]
        public string studyProtocolName
        {
            get { return _studyProtocolName; }
            set { _studyProtocolName = value; }
        }

        string _testIdentifier;

        /// <summary>
        /// Gets or sets the value of variable testIdentifier.
        /// </summary>
        [TestVariable("977299e4-b5d3-4054-8139-5d931e4c2ca7")]
        public string testIdentifier
        {
            get { return _testIdentifier; }
            set { _testIdentifier = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DOM.
        /// </summary>
        [TestVariable("f6062ed9-9482-48a1-ac41-081363e7698e")]
        public string DOM
        {
            get { return repo.DOM; }
            set { repo.DOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.0")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            engine.Helpers.WebService.GetQualificationStatus(DOM, studyProtocolName, testIdentifier);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
