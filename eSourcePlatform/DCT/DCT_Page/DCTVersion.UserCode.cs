///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace DCT.DCT_Page
{
    public partial class DCTVersion
    {
      //string Version;
      string ver_dct;
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        // DCT Version validation
        public void Get_value_DCTValidationVersion(RepoItemInfo divtagInfo)
        {
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'InnerText' from item 'divtagInfo' and assigning its value to variable 'DCTActualVersion'.", divtagInfo);
            DCTActualVersion = divtagInfo.FindAdapter<DivTag>().Element.GetAttributeValueText("InnerText");
            
           
        	
        	// splitting version numbe
        	this.ver_dct = DCTActualVersion.Split(' ')[0];
            Report.Log(ReportLevel.Info, " DCTersion"+ " :" + " " + ver_dct );
        	
        }

        public void DCT_V_Validation(string expVersion )
        {
        	Validate.AreEqual(ver_dct,expVersion);
        }

       
        

        

    }
}
