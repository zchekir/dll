///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace DCT.RCC_Page
{
    public partial class UnSelectCheckBox
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        
        /// <summary>
        /// This usercode method will Capture a screenshot of the 'checkbox' on the begin battery page
        /// It will then compare the screenshot to one stored which is an image of the selected checkbox
        /// If the images match, the box will be clicked to unselect it
        /// </summary>
        /// <param name="Checkbox"></param>
        public void Select_Checkbox(RepoItemInfo Checkbox)
        {
        	//Declare variable for current image
            Bitmap currentImage;
            //Similarity value to use when comparing images
            Double similarity = 0.99;
            //Get the stored image of the checkbox with a tick
            Bitmap storedImage = repo.REDCapCloud.DataCollectionWidgetCheckboxCompleteInfo.GetChecked();
            
            //Capture screenshot of current checkbox in RCC
            currentImage = Ranorex.Imaging.CaptureImageAuto(repo.REDCapCloud.DataCollectionWidgetCheckboxComplete);
            
            //Log Stored and current images in report for debugging purposes
            Report.LogData(ReportLevel.Info, "Info", "Current state of checkbox", currentImage);
            Report.LogData(ReportLevel.Info, "Info", "Known state of checkbox", storedImage);
            
            //Compare the two images, click on the box if they match (checkbox is currently selected if the images match)
            if (Ranorex.Imaging.Compare(currentImage, storedImage, similarity))
            {
            	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'DataCollectionWidgetCheckboxComplete' at Center.", repo.REDCapCloud.DataCollectionWidgetCheckboxCompleteInfo, new RecordItemIndex(0));
            	repo.REDCapCloud.DataCollectionWidgetCheckboxComplete.Click();
            }else{
            	
            	Report.Log(ReportLevel.Info," Test Passed");
            }
            
        }   
    }
}


        

       

    

