///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace DCT.RCC_Page
{
    public partial class E_Subject
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void SubJect(string Subj)
        {
            //Enter subject where to move it to:
        	  Delay.Milliseconds(400);
        	  
        	  
        	  InputTag EnterSubject="/html[1]/body[1]/div[2]/div[2]/div[1]/div[2]/div[2]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[1]/div[2]/div[1]/input[1]";
              EnterSubject.Click();
        	  EnterSubject.PressKeys(Subj);
        	  Keyboard.Press("{ENTER}");
        }

        public void Key_sequence_EnterSubject(RepoItemInfo divtagInfo)
        	
        {
        	Delay.Milliseconds(200);
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DCTSubject' with focus on 'divtagInfo'.", divtagInfo);
            divtagInfo.FindAdapter<DivTag>().PressKeys(DCTSubject);
        }

        public void Get_value_EnterSubject(RepoItemInfo divtagInfo)
        {
            Report.Log(ReportLevel.Info, "Get Value", "Getting attribute 'TagName' from item 'divtagInfo' and assigning its value to variable 'DCTSubject'.", divtagInfo);
            DCTSubject = divtagInfo.FindAdapter<DivTag>().Element.GetAttributeValueText("TagName");
            
        }

        public void Key_sequence_EnterSubject1(RepoItemInfo divtagInfo)
        {
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DCTSubject' with focus on 'divtagInfo'.", divtagInfo);
            divtagInfo.FindAdapter<DivTag>().PressKeys(DCTSubject);
            Keyboard.Press("{TAB}");
        }

        public void Key_sequence_E_Subject(RepoItemInfo divtagInfo)
        {
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DCTSubject' with focus on 'divtagInfo'.", divtagInfo);
            divtagInfo.FindAdapter<DivTag>().PressKeys(DCTSubject);
            Keyboard.Press("{TAB}");
        }

        public void Key_sequence_EnterVisit_(RepoItemInfo divtagInfo)
        {
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DCTVisit' with focus on 'divtagInfo'.", divtagInfo);
            divtagInfo.FindAdapter<DivTag>().PressKeys(DCTVisit);
        }

        public void Key_sequence_E_Subject1(RepoItemInfo unknownInfo)
        {
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DCTSubject' with focus on 'unknownInfo'.", unknownInfo);
            unknownInfo.FindAdapter<Unknown>().PressKeys(DCTSubject);
            Keyboard.Press("{TAB}");
        }

    }
}
