///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace DCT.RCC_Page
{
    public partial class Enter_Visit
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }


        /// <summary>
        /// This method will first attempt to find a visit to move the assessment to. If the visit is not found,
        /// there will be a short delay and the visit will be searched for again. This method will look for the 'NoOptions' result
        /// each time a visit is searched. If the NoOptions result is NOT found, we assume the visit has been populated and
        /// the test will continue.
        /// </summary>
        /// <param name="VisitField">Field where we want to search for the Visit</param>
        /// <param name="NoOptions">Result displayed when the visit is not found</param>
        public void Try_Select_Visit(RepoItemInfo VisitField, RepoItemInfo NoOptions)
        {
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VisitField' at Center.", VisitField);
            VisitField.FindAdapter<LabelTag>().Click(Location.LowerCenter);
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DCTVisit' with focus on 'VisitField'.", VisitField);
            VisitField.FindAdapter<LabelTag>().PressKeys(DCTVisit);
            
            while (NoOptions.Exists(new Duration(1000))) 
            {
            	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VisitField' at Center.", VisitField);
            	VisitField.FindAdapter<LabelTag>().Click(Location.LowerCenter);
            	Report.Log(ReportLevel.Info, "Delay", "Waiting for 10s.");
            	Delay.Duration(10000, false);
            	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'VisitField' at Center.", VisitField);
            	VisitField.FindAdapter<LabelTag>().Click(Location.LowerCenter);
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$DCTVisit' with focus on 'VisitField'.", VisitField);
            	VisitField.FindAdapter<LabelTag>().PressKeys(DCTVisit);
            }
        }

    }
}
