///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cognigram_
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CognigramResultTab recording.
    /// </summary>
    [TestModule("909ddeec-d3ae-40c3-a9c3-4435fdea17d0", ModuleType.Recording, 1)]
    public partial class CognigramResultTab : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Cognigram_Repository repository.
        /// </summary>
        public static Cognigram_Repository repo = Cognigram_Repository.Instance;

        static CognigramResultTab instance = new CognigramResultTab();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CognigramResultTab()
        {
            ReportValue = "";
            ExpectedPDFReportValue = "Cognitive Test Results";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CognigramResultTab Instance
        {
            get { return instance; }
        }

#region Variables

        string _ReportValue;

        /// <summary>
        /// Gets or sets the value of variable ReportValue.
        /// </summary>
        [TestVariable("de41df68-e28d-4289-a862-bdb6879773c3")]
        public string ReportValue
        {
            get { return _ReportValue; }
            set { _ReportValue = value; }
        }

        string _ExpectedPDFReportValue;

        /// <summary>
        /// Gets or sets the value of variable ExpectedPDFReportValue.
        /// </summary>
        [TestVariable("095c28fa-1ab7-45e4-a1da-e695b5c5250a")]
        public string ExpectedPDFReportValue
        {
            get { return _ExpectedPDFReportValue; }
            set { _ExpectedPDFReportValue = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable DOM.
        /// </summary>
        [TestVariable("98466a7c-541b-4a7f-8597-94c097ff6cec")]
        public string DOM
        {
            get { return repo.DOM; }
            set { repo.DOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 600ms.", new RecordItemIndex(0));
            Delay.Duration(600, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'COGNIGRAM.ResultsTable' at Center.", repo.COGNIGRAM.ResultsTableInfo, new RecordItemIndex(1));
            repo.COGNIGRAM.ResultsTable.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 600ms.", new RecordItemIndex(2));
            Delay.Duration(600, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'COGNIGRAM.ClickOnReportCOGNIGRAMTable' at Center.", repo.COGNIGRAM.ClickOnReportCOGNIGRAMTableInfo, new RecordItemIndex(3));
            repo.COGNIGRAM.ClickOnReportCOGNIGRAMTable.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 600ms.", new RecordItemIndex(4));
            Delay.Duration(600, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'COGNIGRAM.OpenPDFReport' at Center.", repo.COGNIGRAM.OpenPDFReportInfo, new RecordItemIndex(5));
            repo.COGNIGRAM.OpenPDFReport.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 600ms.", new RecordItemIndex(6));
            Delay.Duration(600, false);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.COGNIGRAM.ReportValidation, false, new RecordItemIndex(7));
            
            Get_value_ReportValidation(repo.COGNIGRAM.ReportValidationInfo);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'COGNIGRAM.OpenPDFReport'.", repo.COGNIGRAM.OpenPDFReportInfo, new RecordItemIndex(9));
            Host.Current.CloseApplication(repo.COGNIGRAM.OpenPDFReport, new Duration(0));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
