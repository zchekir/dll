///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace Cognigram_
{
	public class fakeStatus
	{
		
		public string assemblyVersion { get; set; }
		
		
		public fakeStatus()
		{
			
		}
		
		}
    public partial class FakeHTML
    {
         string response;
        string expectederror = "The remote server returned an error: (404) Not Found.";
        private void Init()
        {
            
        }

        public void CognigramFakeHTML(string DOM)
        {
        		try{
            string url = "https://" + DOM +"/workflowinstance_fake.html";
            Report.Log(ReportLevel.Info, url );
			//Setup API call
			HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create(url);
			httpRequest.ContentType = "application/json";
			httpRequest.Method = "GET";
			
			
			HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
			fakeStatus responseObject = new  fakeStatus();
			using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
			{
			    response= sr.ReadToEnd();
				responseObject = new JavaScriptSerializer().Deserialize<fakeStatus>(response);
				string vr = responseObject.assemblyVersion;
				
				Report.Log(ReportLevel.Info, response);
			}
			
			
        	}catch (Exception e){
        		
        		Report.Log(ReportLevel.Info, e.Message);
        		Validate.AreEqual(e.Message,expectederror);
        	}
            
        }

    }
}
