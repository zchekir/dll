///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cognigram_
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The sumoLogin recording.
    /// </summary>
    [TestModule("866595e0-993a-42c7-b0f9-b9ace92db689", ModuleType.Recording, 1)]
    public partial class sumoLogin : ITestModule
    {
        /// <summary>
        /// Holds an instance of the Cognigram_Repository repository.
        /// </summary>
        public static Cognigram_Repository repo = Cognigram_Repository.Instance;

        static sumoLogin instance = new sumoLogin();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public sumoLogin()
        {
            SUMOURL = "";
            sumoUserName = "";
            sumoPassword = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static sumoLogin Instance
        {
            get { return instance; }
        }

#region Variables

        string _SUMOURL;

        /// <summary>
        /// Gets or sets the value of variable SUMOURL.
        /// </summary>
        [TestVariable("ff615b39-bdca-40a1-b32f-a322e94d52d3")]
        public string SUMOURL
        {
            get { return _SUMOURL; }
            set { _SUMOURL = value; }
        }

        string _sumoUserName;

        /// <summary>
        /// Gets or sets the value of variable sumoUserName.
        /// </summary>
        [TestVariable("2ce1aa15-7b4f-4e8d-bd24-6a61fdd74632")]
        public string sumoUserName
        {
            get { return _sumoUserName; }
            set { _sumoUserName = value; }
        }

        string _sumoPassword;

        /// <summary>
        /// Gets or sets the value of variable sumoPassword.
        /// </summary>
        [TestVariable("19a04bf3-f38a-4ea3-898e-b835126325fd")]
        public string sumoPassword
        {
            get { return _sumoPassword; }
            set { _sumoPassword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site URL in variable $SUMOURL with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser(SUMOURL, "Chrome", "", false, false, false, false, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SumoLogic.EnterSumoUsernam' at Center.", repo.SumoLogic.EnterSumoUsernamInfo, new RecordItemIndex(1));
            repo.SumoLogic.EnterSumoUsernam.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'SumoLogic.EnterSumoUsernam'.", repo.SumoLogic.EnterSumoUsernamInfo, new RecordItemIndex(2));
            Keyboard.PrepareFocus(repo.SumoLogic.EnterSumoUsernam);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$sumoUserName' with focus on 'SumoLogic.EnterSumoUsernam'.", repo.SumoLogic.EnterSumoUsernamInfo, new RecordItemIndex(3));
            repo.SumoLogic.EnterSumoUsernam.PressKeys(sumoUserName);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SumoLogic.EntersumoPassword' at Center.", repo.SumoLogic.EntersumoPasswordInfo, new RecordItemIndex(4));
            repo.SumoLogic.EntersumoPassword.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'SumoLogic.EntersumoPassword'.", repo.SumoLogic.EntersumoPasswordInfo, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.SumoLogic.EntersumoPassword);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$sumoPassword' with focus on 'SumoLogic.EntersumoPassword'.", repo.SumoLogic.EntersumoPasswordInfo, new RecordItemIndex(6));
            repo.SumoLogic.EntersumoPassword.PressKeys(sumoPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'SumoLogic.ClickSingInsumoButton' at Center.", repo.SumoLogic.ClickSingInsumoButtonInfo, new RecordItemIndex(7));
            repo.SumoLogic.ClickSingInsumoButton.Click();
            Delay.Milliseconds(200);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
