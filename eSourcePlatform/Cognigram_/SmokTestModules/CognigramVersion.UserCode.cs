///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace Cognigram_.SmokTestModules
{
	public class Coningramversion
	{
		
		public string assemblyVersion { get; set; }
		
		
		public Coningramversion()
		{
			
		}
		
		}
    public partial class CognigramVersion
    {
        string conigramSversion;
        private void Init()
        {
            
        }

        public void CognigramVersionCheck(string DOM, string ConigramExpectedVersion)
        {
           HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create("https://"+DOM+ "/svc/api/cognigram/devops");
			httpRequest.ContentType = "application/json";
			httpRequest.ContentLength=0;
			httpRequest.Method = "GET";
			
			
			//Sending the API call:
			
			HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
			Coningramversion responseObject = new  Coningramversion();
			using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
			{
				string response= sr.ReadToEnd();
				responseObject = new JavaScriptSerializer().Deserialize<Coningramversion>(response);
				conigramSversion = responseObject.assemblyVersion;
				
			}
			
			
			Validate.AreEqual(conigramSversion,ConigramExpectedVersion);
			Report.Log(ReportLevel.Info, "CurrentCoGnigramPlatformversion"+ conigramSversion );
			
        	
        }

    }
}
