///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Cognigram_.SmokTestModules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CognigramEmailValidation recording.
    /// </summary>
    [TestModule("62bea32e-5edd-49ad-b537-90752519377f", ModuleType.Recording, 1)]
    public partial class CognigramEmailValidation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Cognigram_.Cognigram_Repository repository.
        /// </summary>
        public static global::Cognigram_.Cognigram_Repository repo = global::Cognigram_.Cognigram_Repository.Instance;

        static CognigramEmailValidation instance = new CognigramEmailValidation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CognigramEmailValidation()
        {
            Gmail = "";
            GmailEmail = "";
            GmailPassword = "";
            expectedEmail = "";
            currentemail = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CognigramEmailValidation Instance
        {
            get { return instance; }
        }

#region Variables

        string _Gmail;

        /// <summary>
        /// Gets or sets the value of variable Gmail.
        /// </summary>
        [TestVariable("0c55951a-3f78-4d59-b3ac-f8e068119975")]
        public string Gmail
        {
            get { return _Gmail; }
            set { _Gmail = value; }
        }

        string _GmailEmail;

        /// <summary>
        /// Gets or sets the value of variable GmailEmail.
        /// </summary>
        [TestVariable("c6f129a4-76d5-4fb5-b421-dc3a5e5b1185")]
        public string GmailEmail
        {
            get { return _GmailEmail; }
            set { _GmailEmail = value; }
        }

        string _GmailPassword;

        /// <summary>
        /// Gets or sets the value of variable GmailPassword.
        /// </summary>
        [TestVariable("58b7aa8f-c2b6-4626-a053-780541fef89b")]
        public string GmailPassword
        {
            get { return _GmailPassword; }
            set { _GmailPassword = value; }
        }

        string _expectedEmail;

        /// <summary>
        /// Gets or sets the value of variable expectedEmail.
        /// </summary>
        [TestVariable("2787ceb1-9289-432f-9a12-39d6bdd17484")]
        public string expectedEmail
        {
            get { return _expectedEmail; }
            set { _expectedEmail = value; }
        }

        string _currentemail;

        /// <summary>
        /// Gets or sets the value of variable currentemail.
        /// </summary>
        [TestVariable("bc147c84-7e70-4d41-b054-554f872af6ef")]
        public string currentemail
        {
            get { return _currentemail; }
            set { _currentemail = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site URL in variable $Gmail with browser 'Chrome' in normal mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser(Gmail, "Chrome", "", false, false, false, true, false, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(1));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'GmailEmailFromGoogle.ClickGmailSingIn' at Center.", repo.GmailEmailFromGoogle.ClickGmailSingInInfo, new RecordItemIndex(2));
            repo.GmailEmailFromGoogle.ClickGmailSingIn.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(3));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Gmail.EnterGmailEmail' at Center.", repo.Gmail.EnterGmailEmailInfo, new RecordItemIndex(4));
            repo.Gmail.EnterGmailEmail.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'Gmail.EnterGmailEmail'.", repo.Gmail.EnterGmailEmailInfo, new RecordItemIndex(5));
            Keyboard.PrepareFocus(repo.Gmail.EnterGmailEmail);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(6));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GmailEmail' with focus on 'Gmail.EnterGmailEmail'.", repo.Gmail.EnterGmailEmailInfo, new RecordItemIndex(7));
            repo.Gmail.EnterGmailEmail.PressKeys(GmailEmail);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Gmail.ClickNext' at Center.", repo.Gmail.ClickNextInfo, new RecordItemIndex(8));
            repo.Gmail.ClickNext.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(9));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Gmail.EnterGmailPassword' at Center.", repo.Gmail.EnterGmailPasswordInfo, new RecordItemIndex(10));
            repo.Gmail.EnterGmailPassword.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key 'Ctrl+A' Press with focus on 'Gmail.EnterGmailPassword'.", repo.Gmail.EnterGmailPasswordInfo, new RecordItemIndex(11));
            Keyboard.PrepareFocus(repo.Gmail.EnterGmailPassword);
            Keyboard.Press(System.Windows.Forms.Keys.A | System.Windows.Forms.Keys.Control, Keyboard.DefaultScanCode, Keyboard.DefaultKeyPressTime, 1, true);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GmailPassword' with focus on 'Gmail.EnterGmailPassword'.", repo.Gmail.EnterGmailPasswordInfo, new RecordItemIndex(12));
            repo.Gmail.EnterGmailPassword.PressKeys(GmailPassword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Gmail.Click_Next' at Center.", repo.Gmail.Click_NextInfo, new RecordItemIndex(13));
            repo.Gmail.Click_Next.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(14));
            Delay.Duration(500, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'InboxCognigramzAtgmailComGmail.OpentheEmail' at Center.", repo.InboxCognigramzAtgmailComGmail.OpentheEmailInfo, new RecordItemIndex(15));
            repo.InboxCognigramzAtgmailComGmail.OpentheEmail.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(16));
            Delay.Duration(500, false);
            
            Get_value_Capture_the_email_(repo.InboxCognigramzAtgmailComGmail.Capture_the_email_Info);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Application", "Closing application containing item 'Gmail'.", repo.Gmail.SelfInfo, new RecordItemIndex(18));
            Host.Current.CloseApplication(repo.Gmail.Self, new Duration(0));
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
