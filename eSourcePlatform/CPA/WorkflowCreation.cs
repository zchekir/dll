///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CPA
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The WorkflowCreation recording.
    /// </summary>
    [TestModule("ff1ab6c2-86bd-43f8-8d89-a8c55c748cf2", ModuleType.Recording, 1)]
    public partial class WorkflowCreation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CPARepository repository.
        /// </summary>
        public static CPARepository repo = CPARepository.Instance;

        static WorkflowCreation instance = new WorkflowCreation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public WorkflowCreation()
        {
            Token = "";
            Studyid = "";
            WorkflowData = "";
            Studname = "";
            CPADOM = "";
            workflowID = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static WorkflowCreation Instance
        {
            get { return instance; }
        }

#region Variables

        string _Token;

        /// <summary>
        /// Gets or sets the value of variable Token.
        /// </summary>
        [TestVariable("ab231873-9431-40c2-b70a-1df0514586db")]
        public string Token
        {
            get { return _Token; }
            set { _Token = value; }
        }

        string _Studyid;

        /// <summary>
        /// Gets or sets the value of variable Studyid.
        /// </summary>
        [TestVariable("589d157d-3a47-44e9-9f62-7a57b0901e47")]
        public string Studyid
        {
            get { return _Studyid; }
            set { _Studyid = value; }
        }

        string _WorkflowData;

        /// <summary>
        /// Gets or sets the value of variable WorkflowData.
        /// </summary>
        [TestVariable("af161e08-72c8-4a09-8ec4-3d90ed60f941")]
        public string WorkflowData
        {
            get { return _WorkflowData; }
            set { _WorkflowData = value; }
        }

        string _Studname;

        /// <summary>
        /// Gets or sets the value of variable Studname.
        /// </summary>
        [TestVariable("1985b0c0-efe4-46b6-902c-4c52cb9ac83f")]
        public string Studname
        {
            get { return _Studname; }
            set { _Studname = value; }
        }

        string _workflowID;

        /// <summary>
        /// Gets or sets the value of variable workflowID.
        /// </summary>
        [TestVariable("130b96ef-9f53-45b0-a048-9ad234a1e59b")]
        public string workflowID
        {
            get { return _workflowID; }
            set { _workflowID = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CPADOM.
        /// </summary>
        [TestVariable("31d9b937-2664-4724-bbe7-6fd57c281220")]
        public string CPADOM
        {
            get { return repo.CPADOM; }
            set { repo.CPADOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            createWorkflow(Token, Studyid, WorkflowData, Studname, CPADOM);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
