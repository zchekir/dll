///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
//using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

 public class AuthJSONRequest
	  {
 	
 	
		/// <summary>-------------------------------------------------------
		/// External users key for accessing the API
		/// </summary>
		public string key { get; set; }
		
		/// <summary>------------------------------------------------------
		/// External users secret for accessing the API
		/// </summary>
		public string secret { get; set; }
		
		/// <summary>-----------------------------------------------------
		/// Creates a new autentication request object
		/// </summary>
		/// <param name="key"></param>
		/// <param name="secret"></param>
		public AuthJSONRequest(string key, string secret)
		{
			this.key = key;
			this.secret = secret;
		}
			
	}
	
	/// <summary>-------------------------------------------------------------------
	/// Class definition for JSON object which is received after an AuthToken request
	/// </summary>
	public class AuthJSONResponse
		
	{
		
		
		public string authorizationValue { get; set; }
		public string authorizationScheme { get; set; }
		
		public AuthJSONResponse()
		{
			
		}
	}
namespace CPA.APIV2Modules
{
    public partial class External_Authenticate
    {
    	
    	// varibles sectiob :
    	//public string AuthToken;
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void ServerAuthentication(string key, string secret, string StudyProtocol, string DOM)
        {
           HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create("https://" + DOM + "/api/external/V2/" + StudyProtocol  + "/AuthenticationToken");
        	httpRequest.ContentType = "application/json";
        	httpRequest.Method = "POST";
        	
        	//Create JSON ibject containing key and secret which is sent in the body
        	AuthJSONRequest jsonObject = new AuthJSONRequest(key,secret);
        	
        	using (StreamWriter sw = new StreamWriter(httpRequest.GetRequestStream()))
        	{
        		string json = new JavaScriptSerializer().Serialize(jsonObject);
        		
        		sw.Write(json);
        		sw.Flush();
        		sw.Close();
        	}
        	
        	//Get the response and read into a new object
        	HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
        	
        	AuthJSONResponse responseObject = new AuthJSONResponse();
        	
        	using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
        	{
        		string response = sr.ReadToEnd();
        		//Deserialise the JSON in a new object to use later
        		responseObject = new JavaScriptSerializer().Deserialize<AuthJSONResponse>(response);
        		
        		AuthToken = responseObject.authorizationValue;
        		
        		Report.Log(ReportLevel.Info, "AuthToken is: " + AuthToken);
        	}
        }

        

    }
}
