///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace CPA.APIV2Modules
{
	
	// send in the body
	
		public class worflowStateJSONResponse
	{
		public string workflowInstanceId { get; set; }
		//public string workflowToken { get; set; }
		
		
		
		public  worflowStateJSONResponse(string workflowInstanceId)
		{
			this.workflowInstanceId = workflowInstanceId;
			
			
		}
		
		
	}
		
		// capture response 
		
		public class CurrentStateJSONResponse
	{
		public string message { get; set; }
		
		public CurrentStateJSONResponse()
		{
			
		}
		
	}
		

// class level:		

    public partial class Begin_Workflow
    {
        string json;
        
        private void Init()
        {
            
        }

        public void Get_CurentState(string workflowID, string DOM, string workflowToken)
        {
        	
        	
        	
        	
        	
        	
        	 //Setup API call
	        HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create("https://" + DOM + "/api/prsworkflow/" + workflowID  + "/BeginWorkflow");
			httpRequest.ContentType = "application/json";
			httpRequest.Method = "POST";
		    httpRequest.Headers.Add("Authorization", workflowToken);
			
			
		    //Create JSON object containing demographics and study details
			 worflowStateJSONResponse assessmentObject = new  worflowStateJSONResponse(workflowInstanceId);
			// body:
			 using (StreamWriter sw = new StreamWriter(httpRequest.GetRequestStream()))
			    {
				json = new JavaScriptSerializer().Serialize(assessmentObject);

			
				
				sw.Write(json);
				sw.Flush();
			    sw.Close();
			    }
        	
			//response
			
				HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
			    CurrentStateJSONResponse responseObject = new CurrentStateJSONResponse();
			
		
			    using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
			{
				string response = sr.ReadToEnd();
				responseObject = new JavaScriptSerializer().Deserialize<CurrentStateJSONResponse>(response);
				
				string  currentState = responseObject.message;
				
				Report.Log(ReportLevel.Info,  currentState);
				Report.Log(ReportLevel.Info,  response);
			} 
        }

        

    }

}

