///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CPA
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The addinBlock recording.
    /// </summary>
    [TestModule("96212289-c634-46c5-8cbb-9c4421cf821b", ModuleType.Recording, 1)]
    public partial class addinBlock : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CPARepository repository.
        /// </summary>
        public static CPARepository repo = CPARepository.Instance;

        static addinBlock instance = new addinBlock();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public addinBlock()
        {
            Token = "";
            CPADOM = "";
            WorkflowID = "";
            BlockJsonData = "";
            blockid = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static addinBlock Instance
        {
            get { return instance; }
        }

#region Variables

        string _Token;

        /// <summary>
        /// Gets or sets the value of variable Token.
        /// </summary>
        [TestVariable("812a37c9-1ccc-461e-acce-6c925194b1f6")]
        public string Token
        {
            get { return _Token; }
            set { _Token = value; }
        }

        string _WorkflowID;

        /// <summary>
        /// Gets or sets the value of variable WorkflowID.
        /// </summary>
        [TestVariable("451b7f90-2f99-4d0b-a6b4-01980f936c8b")]
        public string WorkflowID
        {
            get { return _WorkflowID; }
            set { _WorkflowID = value; }
        }

        string _BlockJsonData;

        /// <summary>
        /// Gets or sets the value of variable BlockJsonData.
        /// </summary>
        [TestVariable("43a784c7-7996-4bc6-b268-1748c8e11ed8")]
        public string BlockJsonData
        {
            get { return _BlockJsonData; }
            set { _BlockJsonData = value; }
        }

        string _blockid;

        /// <summary>
        /// Gets or sets the value of variable blockid.
        /// </summary>
        [TestVariable("dcebca3f-7d43-437f-af93-08a002020b9d")]
        public string blockid
        {
            get { return _blockid; }
            set { _blockid = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CPADOM.
        /// </summary>
        [TestVariable("809984c4-38af-4ea4-99f0-b1fe912b0013")]
        public string CPADOM
        {
            get { return repo.CPADOM; }
            set { repo.CPADOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            setUpBlock(Token, WorkflowID, BlockJsonData, CPADOM);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
