///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace CPA.InternalAPIModules
{
	public class PowerBIReport
	{
		
		public string username { get; set; }

		public string disOtherIdpSupported { get; set; }

		public string checkPhones { get; set; }

		public string isRemoteNGCSupported { get; set; }
		
		public string isCookieBannerShown {get; set;}

		public string isFidoSupported { get; set; }

		public string originalRequest { get; set; }

		public string country { get; set; }

		public string forceotclogin { get; set; }

		public string isExternalFederationDisallowed { get; set; }

		public string isRemoteConnectSupported { get; set; }

		public string federationFlags { get; set; }
		
		public string flowToken { get; set; }
		
		public string fisAccessPassSupported { get; set; }

		public string supervisorId { get; set; }

		/// <summary>----------------------------------------------------------------------------
		/// Object for creating a new workflow request

		public PowerBIReport(string username, string disOtherIdpSupported, string checkPhones, string isRemoteNGCSupported,string isCookieBannerShown, string isFidoSupported, string originalRequest, string country, string forceotclogin, string isExternalFederationDisallowed, string isRemoteConnectSupported, string federationFlags, string flowToken, string fisAccessPassSupported )
		{
			this.username = username;
			this.disOtherIdpSupported = disOtherIdpSupported;
			this.checkPhones = checkPhones;
			this.isRemoteNGCSupported = isRemoteNGCSupported;
			this.isCookieBannerShown=isCookieBannerShown;
			this.isFidoSupported = isFidoSupported;
			this.originalRequest = originalRequest;
			this.country = country;
			this.forceotclogin = forceotclogin;
			this.isExternalFederationDisallowed = isExternalFederationDisallowed;
			this.isRemoteConnectSupported = isRemoteConnectSupported;
			this.federationFlags = federationFlags;
			this.flowToken = flowToken;
			this.fisAccessPassSupported = fisAccessPassSupported;
			
		}
	}
	public class ReportData
	{
		
		public string Username { get; set; }
		public Credentials Credentials{ get; set; }
		public string PrefCredential { get; set; }
		
		public ReportData()
		{

		}
	}
	
	public class Credentials
	{
		
		public string PrefCredential { get; set; }

		public string FederationRedirectUrl { get; set; }

		public Credentials()
		{

		}
	}
	public partial class PowerBI_Report
	{
		//Variables section:
		string username ="@cogstate.com";
		string disOtherIdpSupported = "false";
		string checkPhones="false";
		string isRemoteNGCSupported ="true";
		string isCookieBannerShown="false";
		string isFidoSupported ="true";
		string originalRequest= "rQIIAcXTu4_jRBgA8M1mb-8hBCdEQXkFJyFOTmb89kor5HjXie3YeTl2HIEWP8aJnfgRe5xXQUWBkJCupqRBOgokhHSIkvKqK6juT6BCICQaJLwnxL9AMV8x82nm-zTf74MmbMGL93gO-gCCkGAQCwk69CDBU65PCDwLgcshAUKgnjMA0AxVvP3gYb_6g9NefaJ_-87U__jJF589a3y6xDgvL9ptN89bebZDhRe1_CxpL4qsyss2G7oUw_M04QWMQNA8ZAmBolmC95HAkxwkmYBpFyjPCly2PRdwnB-6BO96PEF7rEu4LkKES4chLwQUiVzUHr9OniAfR1n6Y6PxstF4dlqyFAdpCGiKp1gGMPWbrXlyvTOOzs6wr7GejEj9AIBz7Kz6tsLosYIHpgIN8hrM7XrFxsqJ5Whg-tCoz3RbXhsRAIapJn1zGc2vFvUdcqQnzn5uT0mDdJhXp28NxAovyduQFdER_X56P8yK5CbPSvxV8-_mIEepEkhZmtbVtm7TUIoj372tfFhkOSpwhMrLYO-YN5Hfj2c5z6oRCRQxVRZ5Ab0Imkg98Bu_WgQhdZiqnJT0dE6QVE2TjdKeTCmfCbHKw-3YjC3BdjRC0WnsghnVR9Juyy23ZdLthjZ91CaTggiFY5kZPXPWw37ZUR2jX-FkNvTMzViMfWl2U3WM-XxVRWEikBarKMlEE1f8fpaMyTFh7AxVcwadfK_b41iV6CBmiyCYBSwPzdLiQp30bapLJ7Jo8eu9A5OU31SiFS0cF1buXLUcRdIsSPdzM2ZV-xCPSVklq9RLWCLvThTTXG4XqrtFHWyPQDajC7csU45H9I4EYuAdZpa2l601FsfdDRDdRThe6lVPXk5XnWNvUUyppCvYxy4lYYOj5mgykTUDd_wrJlzkgJWNvhVn6Wivz-lpCB07NuUZl5tFf8XD2TiQpOF23xWyaM6QErD2qxE3hQ7M2Z254mCk1IOkgCsf9aWRB3U3EZX6gywg81GmYWJFTg1Lvt6Wc2KQpKNnzff_s5G660MZla1dlAbZrmylCLf_xVLDib5vntdkkix90Xyznoo0Ch7lRRZGa_TyrPHr2RugeXHv3oOHJ--ePDr566zx9Z2a4ne_fHP655c_689_wPgj8m7jxZ12PkDKZDN84jFrmdY4ybW07sJ1es5waBZpNLLLrnh0B-HeEC_5C_j0vPH0_Py388bnd09-uv-88f9K_rBuF6Picrub4CqoWbRrITjzs7Vy9ZgEaFOHxyRXI8qS14Bu0w71zj81";
		string country ="US";
		string forceotclogin = "FALSE";
		string isExternalFederationDisallowed ="false";
		string isRemoteConnectSupported ="false";
		string  federationFlags = "0";
		string flowToken = "AQABAAEAAACQN9QBRU3jT6bcBQLZNUj74l96oFYvINt2Z3-fT0ulMggcxntrROgyRLAM4gulfAf6myNic2A94oPl-xDUtN7C1qaM9DNk4PyKunuugn9oF1IDenDjqhSWAW7OI403BIZPNe3AbwnYy6Ov9VEGnswdQBfurpWau6IycFxC_vUa7wnNTzC0-nEZj-7eq_6h1rpw3BgvHmkpNXNkbWzul3d3q39scHCZhPmcviGobd1_RRHot3WIc6KUKopKjLGQahv5jQm96mtl796KjeElrZNof5J2mqwsFC87mhg2dCD98lV9VRrK0n8V1VzSXoynrH363D1MgLfNRmKgrK2IggHP2ogZ6Ypb5wpRjTP-wMXI2t-ygg6hSMK5-B2ocm8sC_A1uoZ2Pa4njRqOsQQyzch9IAA";
		string fisAccessPassSupported ="true";
		
		
		private void Init()
		{
			
		}

		public void PowerBI()
		{
			//variable
			string url = "https://login.microsoftonline.com/common/GetCredentialType?";
			//Setup API call
			HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create(url);
			httpRequest.ContentType = "application/json";
			httpRequest.Method = "POST";
			//httpRequest.Headers.Add("Authorization", authoToken);
			
			
			
			//Create JSON object containing demographics and study details
			PowerBIReport assessmentObject = new PowerBIReport(username,  disOtherIdpSupported,  checkPhones,  isRemoteNGCSupported,isCookieBannerShown,  isFidoSupported,  originalRequest,  country,  forceotclogin,  isExternalFederationDisallowed,  isRemoteConnectSupported,  federationFlags,  flowToken,  fisAccessPassSupported);
			
			
			using (StreamWriter sw = new StreamWriter(httpRequest.GetRequestStream()))
			{
				string json = new JavaScriptSerializer().Serialize(assessmentObject);
				
				//Debugging Request
				Report.Info("Data to send: " + json);
				
				sw.Write(json);
				sw.Flush();
				sw.Close();
			}
			
			//Get response and store in new object
			HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
			
			ReportData responseObject = new ReportData();
			
			using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
			{
				string response = sr.ReadToEnd();
				responseObject = new JavaScriptSerializer().Deserialize<ReportData>(response);
				
				string  PowerBIReport = responseObject.Credentials.FederationRedirectUrl;
				var PowerBIUsername = responseObject.PrefCredential;
				
				Report.Log(ReportLevel.Info, "PowerBIReport URL: " + PowerBIReport);
				Report.Log(ReportLevel.Info, "PowerBIUsername: " + PowerBIUsername);
				
			}
		}

	}
}
