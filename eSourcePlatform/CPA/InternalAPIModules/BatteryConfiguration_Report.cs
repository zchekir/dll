///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CPA.InternalAPIModules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The BatteryConfiguration_Report recording.
    /// </summary>
    [TestModule("99475296-5cd2-49b9-8044-ab8ce8050d87", ModuleType.Recording, 1)]
    public partial class BatteryConfiguration_Report : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CPA.CPARepository repository.
        /// </summary>
        public static global::CPA.CPARepository repo = global::CPA.CPARepository.Instance;

        static BatteryConfiguration_Report instance = new BatteryConfiguration_Report();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public BatteryConfiguration_Report()
        {
            DOM = "";
            AuthToken = "y5-eCG5gsdDFJTSWx8nSn2jiUizisJkAB26EEz-Bz3oCLDPj9BLl7gUJqswTemRo";
            BatteryConfigurationReports = "";
            studid = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static BatteryConfiguration_Report Instance
        {
            get { return instance; }
        }

#region Variables

        string _DOM;

        /// <summary>
        /// Gets or sets the value of variable DOM.
        /// </summary>
        [TestVariable("a233e2d6-0503-4233-b91f-4d2c97b9fc9c")]
        public string DOM
        {
            get { return _DOM; }
            set { _DOM = value; }
        }

        string _AuthToken;

        /// <summary>
        /// Gets or sets the value of variable AuthToken.
        /// </summary>
        [TestVariable("f13a9fbc-65dd-4beb-9e5a-95aa79b7c20c")]
        public string AuthToken
        {
            get { return _AuthToken; }
            set { _AuthToken = value; }
        }

        string _BatteryConfigurationReports;

        /// <summary>
        /// Gets or sets the value of variable BatteryConfigurationReports.
        /// </summary>
        [TestVariable("1c57d899-0ef2-49db-98ff-e513d5d57f3a")]
        public string BatteryConfigurationReports
        {
            get { return _BatteryConfigurationReports; }
            set { _BatteryConfigurationReports = value; }
        }

        string _studid;

        /// <summary>
        /// Gets or sets the value of variable studid.
        /// </summary>
        [TestVariable("f9b681c3-2555-4854-a874-18fddb21141a")]
        public string studid
        {
            get { return _studid; }
            set { _studid = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            BatteryConfigurationReport(DOM, AuthToken);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
