///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CPA.AddBatteryPage
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validate_Population_Options recording.
    /// </summary>
    [TestModule("5f3d6a76-0e05-4555-9e5e-da59aa9e4b68", ModuleType.Recording, 1)]
    public partial class Validate_Population_Options : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CPA.CPARepository repository.
        /// </summary>
        public static global::CPA.CPARepository repo = global::CPA.CPARepository.Instance;

        static Validate_Population_Options instance = new Validate_Population_Options();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validate_Population_Options()
        {
            Population = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validate_Population_Options Instance
        {
            get { return instance; }
        }

#region Variables

        string _Population;

        /// <summary>
        /// Gets or sets the value of variable Population.
        /// </summary>
        [TestVariable("af68b261-9d44-4b3d-b2fc-778a0c4e9ce0")]
        public string Population
        {
            get { return _Population; }
            set { _Population = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CPADOM.
        /// </summary>
        [TestVariable("f54fbb85-c5ac-4f6a-98d6-049472b68327")]
        public string CPADOM
        {
            get { return repo.CPADOM; }
            set { repo.CPADOM = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable BatteryPopulation.
        /// </summary>
        [TestVariable("85909bbe-70e5-408e-83e1-6c765b095ce9")]
        public string BatteryPopulation
        {
            get { return repo.BatteryPopulation; }
            set { repo.BatteryPopulation = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'CogstateSolutionPlatform.AddBatteryPage.BatteryPopulationOption'.", repo.CogstateSolutionPlatform.AddBatteryPage.BatteryPopulationOptionInfo, new RecordItemIndex(0));
            Validate.Exists(repo.CogstateSolutionPlatform.AddBatteryPage.BatteryPopulationOptionInfo);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
