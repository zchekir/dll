///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CPA.AddWorkflowPage
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Enter_WorkflowDescription recording.
    /// </summary>
    [TestModule("db7f396e-30c4-4e67-800d-3cb9be3ae7b8", ModuleType.Recording, 1)]
    public partial class Enter_WorkflowDescription : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CPA.CPARepository repository.
        /// </summary>
        public static global::CPA.CPARepository repo = global::CPA.CPARepository.Instance;

        static Enter_WorkflowDescription instance = new Enter_WorkflowDescription();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Enter_WorkflowDescription()
        {
            WorkflowDescription = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Enter_WorkflowDescription Instance
        {
            get { return instance; }
        }

#region Variables

        string _WorkflowDescription;

        /// <summary>
        /// Gets or sets the value of variable WorkflowDescription.
        /// </summary>
        [TestVariable("c022c578-ad5b-4bd7-ad66-8e8d0ea95ba4")]
        public string WorkflowDescription
        {
            get { return _WorkflowDescription; }
            set { _WorkflowDescription = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CPADOM.
        /// </summary>
        [TestVariable("f54fbb85-c5ac-4f6a-98d6-049472b68327")]
        public string CPADOM
        {
            get { return repo.CPADOM; }
            set { repo.CPADOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionField' at Center.", repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionFieldInfo, new RecordItemIndex(0));
            repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionField.Click(3);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}' with focus on 'CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionField'.", repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionFieldInfo, new RecordItemIndex(1));
            repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionField.PressKeys("{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}", 1);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$WorkflowDescription' with focus on 'CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionField'.", repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionFieldInfo, new RecordItemIndex(2));
            repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionField.PressKeys(WorkflowDescription, 1);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (TagValue=$WorkflowDescription) on item 'CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionField'.", repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionFieldInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowDescriptionFieldInfo, "TagValue", WorkflowDescription);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
