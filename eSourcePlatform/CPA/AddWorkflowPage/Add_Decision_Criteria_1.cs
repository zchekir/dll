///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CPA.AddWorkflowPage
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Add_Decision_Criteria_1 recording.
    /// </summary>
    [TestModule("d602b96a-c4a5-4234-9a1d-5aec342815dd", ModuleType.Recording, 1)]
    public partial class Add_Decision_Criteria_1 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CPA.CPARepository repository.
        /// </summary>
        public static global::CPA.CPARepository repo = global::CPA.CPARepository.Instance;

        static Add_Decision_Criteria_1 instance = new Add_Decision_Criteria_1();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Add_Decision_Criteria_1()
        {
            Tier1Min = "80";
            Tier1Max = "90";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Add_Decision_Criteria_1 Instance
        {
            get { return instance; }
        }

#region Variables

        string _Tier1Min;

        /// <summary>
        /// Gets or sets the value of variable Tier1Min.
        /// </summary>
        [TestVariable("21a1b1e4-71ba-4cb5-b843-9ec343525dc1")]
        public string Tier1Min
        {
            get { return _Tier1Min; }
            set { _Tier1Min = value; }
        }

        string _Tier1Max;

        /// <summary>
        /// Gets or sets the value of variable Tier1Max.
        /// </summary>
        [TestVariable("90483d8d-72a5-458f-b4e7-698b6b1bd9bf")]
        public string Tier1Max
        {
            get { return _Tier1Max; }
            set { _Tier1Max = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CPADOM.
        /// </summary>
        [TestVariable("f54fbb85-c5ac-4f6a-98d6-049472b68327")]
        public string CPADOM
        {
            get { return repo.CPADOM; }
            set { repo.CPADOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMin' at Center.", repo.CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMinInfo, new RecordItemIndex(0));
            repo.CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMin.Click(3);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Tier1Min' with focus on 'CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMin'.", repo.CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMinInfo, new RecordItemIndex(1));
            repo.CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMin.PressKeys(Tier1Min, 1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMax' at Center.", repo.CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMaxInfo, new RecordItemIndex(2));
            repo.CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMax.Click(3);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Tier1Max' with focus on 'CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMax'.", repo.CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMaxInfo, new RecordItemIndex(3));
            repo.CogstateSolutionPlatform.AddWorkflowPage.ComplexOutcomeDecisionMax.PressKeys(Tier1Max, 1);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.AddWorkflowPage.WorkflowBlockPropertiesSaveButton' at Center.", repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowBlockPropertiesSaveButtonInfo, new RecordItemIndex(4));
            repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowBlockPropertiesSaveButton.Click(3);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(5));
            Delay.Duration(500, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
