///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CPA
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CompletionSteps recording.
    /// </summary>
    [TestModule("ba8805fa-93f2-4f06-8f89-86950a98cf9d", ModuleType.Recording, 1)]
    public partial class CompletionSteps : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CPARepository repository.
        /// </summary>
        public static CPARepository repo = CPARepository.Instance;

        static CompletionSteps instance = new CompletionSteps();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CompletionSteps()
        {
            Token = "";
            CPADOM = "";
            BlockID = "";
            WorkflowID = "";
            JSONData = "";
            studid = "";
            NextBlockid = "";
            batteryID = "";
            DeskTopID = "";
            TabConfigID = "";
            studyName = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CompletionSteps Instance
        {
            get { return instance; }
        }

#region Variables

        string _Token;

        /// <summary>
        /// Gets or sets the value of variable Token.
        /// </summary>
        [TestVariable("09b82bc2-2e16-4a91-bd36-ede4d9bffdce")]
        public string Token
        {
            get { return _Token; }
            set { _Token = value; }
        }

        string _BlockID;

        /// <summary>
        /// Gets or sets the value of variable BlockID.
        /// </summary>
        [TestVariable("9e61b69c-82e2-4a9d-8701-0b9d50cfa695")]
        public string BlockID
        {
            get { return _BlockID; }
            set { _BlockID = value; }
        }

        string _WorkflowID;

        /// <summary>
        /// Gets or sets the value of variable WorkflowID.
        /// </summary>
        [TestVariable("7c9d0de2-9f95-4399-a44d-c6a930ad4d3e")]
        public string WorkflowID
        {
            get { return _WorkflowID; }
            set { _WorkflowID = value; }
        }

        string _JSONData;

        /// <summary>
        /// Gets or sets the value of variable JSONData.
        /// </summary>
        [TestVariable("4ea06dcc-127b-4bb8-9ea3-9d6284947136")]
        public string JSONData
        {
            get { return _JSONData; }
            set { _JSONData = value; }
        }

        string _studid;

        /// <summary>
        /// Gets or sets the value of variable studid.
        /// </summary>
        [TestVariable("62fa57b2-3afa-4a0a-a70e-696a9938ae21")]
        public string studid
        {
            get { return _studid; }
            set { _studid = value; }
        }

        string _NextBlockid;

        /// <summary>
        /// Gets or sets the value of variable NextBlockid.
        /// </summary>
        [TestVariable("c3c66f61-f7f2-4993-b59c-d3868bcc96b5")]
        public string NextBlockid
        {
            get { return _NextBlockid; }
            set { _NextBlockid = value; }
        }

        string _batteryID;

        /// <summary>
        /// Gets or sets the value of variable batteryID.
        /// </summary>
        [TestVariable("31aaefea-a6ff-4889-84c4-ee32d31786ee")]
        public string batteryID
        {
            get { return _batteryID; }
            set { _batteryID = value; }
        }

        string _DeskTopID;

        /// <summary>
        /// Gets or sets the value of variable DeskTopID.
        /// </summary>
        [TestVariable("4a6e8ec1-a712-4074-b9f3-7c9208e1d09d")]
        public string DeskTopID
        {
            get { return _DeskTopID; }
            set { _DeskTopID = value; }
        }

        string _TabConfigID;

        /// <summary>
        /// Gets or sets the value of variable TabConfigID.
        /// </summary>
        [TestVariable("a6a69c34-9b64-4f11-861a-dee022ffc354")]
        public string TabConfigID
        {
            get { return _TabConfigID; }
            set { _TabConfigID = value; }
        }

        string _studyName;

        /// <summary>
        /// Gets or sets the value of variable studyName.
        /// </summary>
        [TestVariable("5fcb11c8-4083-4247-8698-2a935d0223fe")]
        public string studyName
        {
            get { return _studyName; }
            set { _studyName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CPADOM.
        /// </summary>
        [TestVariable("f58f18f9-9508-4d25-9e45-cf9cd56afbd4")]
        public string CPADOM
        {
            get { return repo.CPADOM; }
            set { repo.CPADOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Stepcompletion(Token, BlockID, WorkflowID, JSONData, CPADOM);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
