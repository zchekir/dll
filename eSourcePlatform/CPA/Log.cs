///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CPA
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Log recording.
    /// </summary>
    [TestModule("23ed3961-5aca-45a1-a490-14b35df0300c", ModuleType.Recording, 1)]
    public partial class Log : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CPARepository repository.
        /// </summary>
        public static CPARepository repo = CPARepository.Instance;

        static Log instance = new Log();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Log()
        {
            Token = "";
            CPADOM = "";
            SeststatusID = "";
            WorkflowID = "";
            JSONData = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Log Instance
        {
            get { return instance; }
        }

#region Variables

        string _Token;

        /// <summary>
        /// Gets or sets the value of variable Token.
        /// </summary>
        [TestVariable("64fd0353-7ae5-41cf-8321-d535405bb726")]
        public string Token
        {
            get { return _Token; }
            set { _Token = value; }
        }

        string _SeststatusID;

        /// <summary>
        /// Gets or sets the value of variable SeststatusID.
        /// </summary>
        [TestVariable("2346b18e-b91f-47c5-a5df-7c2625a3c573")]
        public string SeststatusID
        {
            get { return _SeststatusID; }
            set { _SeststatusID = value; }
        }

        string _WorkflowID;

        /// <summary>
        /// Gets or sets the value of variable WorkflowID.
        /// </summary>
        [TestVariable("f945ed76-6ea7-480e-bbbd-4fed6fa43de7")]
        public string WorkflowID
        {
            get { return _WorkflowID; }
            set { _WorkflowID = value; }
        }

        string _JSONData;

        /// <summary>
        /// Gets or sets the value of variable JSONData.
        /// </summary>
        [TestVariable("740ea65f-9904-4e59-a2c7-7043d1928cae")]
        public string JSONData
        {
            get { return _JSONData; }
            set { _JSONData = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CPADOM.
        /// </summary>
        [TestVariable("69350f75-9ad9-46ef-a0b5-cd2347a481e8")]
        public string CPADOM
        {
            get { return repo.CPADOM; }
            set { repo.CPADOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            savelog(Token, CPADOM, WorkflowID, JSONData);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
