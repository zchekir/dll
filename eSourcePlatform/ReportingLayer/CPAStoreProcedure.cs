///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ReportingLayer
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CPAStoreProcedure recording.
    /// </summary>
    [TestModule("6b4e740b-107a-42b3-8edc-193add9cc91b", ModuleType.Recording, 1)]
    public partial class CPAStoreProcedure : ITestModule
    {
        /// <summary>
        /// Holds an instance of the ReportingLayerRepository repository.
        /// </summary>
        public static ReportingLayerRepository repo = ReportingLayerRepository.Instance;

        static CPAStoreProcedure instance = new CPAStoreProcedure();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CPAStoreProcedure()
        {
            DBServer = "cgst-qc.database.windows.net";
            Database = "";
            dbUsername = "";
            dbPassword = "";
            Authentication = "Active Directory Password";
            studID = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CPAStoreProcedure Instance
        {
            get { return instance; }
        }

#region Variables

        string _DBServer;

        /// <summary>
        /// Gets or sets the value of variable DBServer.
        /// </summary>
        [TestVariable("15da46b2-9b4b-4dd6-8baa-4b6c6527bdc5")]
        public string DBServer
        {
            get { return _DBServer; }
            set { _DBServer = value; }
        }

        string _Database;

        /// <summary>
        /// Gets or sets the value of variable Database.
        /// </summary>
        [TestVariable("65cd60e4-275b-48b0-800c-391a6409c74d")]
        public string Database
        {
            get { return _Database; }
            set { _Database = value; }
        }

        string _dbUsername;

        /// <summary>
        /// Gets or sets the value of variable dbUsername.
        /// </summary>
        [TestVariable("bc7384c9-0373-491f-a170-2b1d41f944b0")]
        public string dbUsername
        {
            get { return _dbUsername; }
            set { _dbUsername = value; }
        }

        string _dbPassword;

        /// <summary>
        /// Gets or sets the value of variable dbPassword.
        /// </summary>
        [TestVariable("aba9a429-57a8-41f5-957e-ec968d47c8f1")]
        public string dbPassword
        {
            get { return _dbPassword; }
            set { _dbPassword = value; }
        }

        string _Authentication;

        /// <summary>
        /// Gets or sets the value of variable Authentication.
        /// </summary>
        [TestVariable("cf2dfee1-bee2-4bc5-bd6f-5d24896ce1ef")]
        public string Authentication
        {
            get { return _Authentication; }
            set { _Authentication = value; }
        }

        string _studID;

        /// <summary>
        /// Gets or sets the value of variable studID.
        /// </summary>
        [TestVariable("5fa46b8a-bbe9-4c2b-b40c-d4213ce2762e")]
        public string studID
        {
            get { return _studID; }
            set { _studID = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            ExecuteCPAStoreProcedure(DBServer, Database, dbUsername, dbPassword, Authentication, studID);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
