///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace ReportingLayer.StandardExtract
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Check_Pending_Cells recording.
    /// </summary>
    [TestModule("44e68252-3be1-453c-a81c-83b4c284da55", ModuleType.Recording, 1)]
    public partial class Check_Pending_Cells : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::ReportingLayer.ReportingLayerRepository repository.
        /// </summary>
        public static global::ReportingLayer.ReportingLayerRepository repo = global::ReportingLayer.ReportingLayerRepository.Instance;

        static Check_Pending_Cells instance = new Check_Pending_Cells();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Check_Pending_Cells()
        {
            Authentication = "Active Directory Password";
            CSPPassword = "913172DMW^";
            CSPUsername = "dwood@cogstate.com";
            DBServer = "cgst-qcpd.database.windows.net";
            TestIdentifier = "9da191a0-69f1-4600-959b-5fe379e31dae";
            RptDatabase = "cgst-rpt";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Check_Pending_Cells Instance
        {
            get { return instance; }
        }

#region Variables

        string _Authentication;

        /// <summary>
        /// Gets or sets the value of variable Authentication.
        /// </summary>
        [TestVariable("1971f888-ddf7-443b-b794-c024c135b8c9")]
        public string Authentication
        {
            get { return _Authentication; }
            set { _Authentication = value; }
        }

        string _CSPPassword;

        /// <summary>
        /// Gets or sets the value of variable CSPPassword.
        /// </summary>
        [TestVariable("cefd111f-bbc4-4dba-84f3-04479a969d49")]
        public string CSPPassword
        {
            get { return _CSPPassword; }
            set { _CSPPassword = value; }
        }

        string _CSPUsername;

        /// <summary>
        /// Gets or sets the value of variable CSPUsername.
        /// </summary>
        [TestVariable("012660f4-bd2c-48f2-87c1-875e293ec6c4")]
        public string CSPUsername
        {
            get { return _CSPUsername; }
            set { _CSPUsername = value; }
        }

        string _DBServer;

        /// <summary>
        /// Gets or sets the value of variable DBServer.
        /// </summary>
        [TestVariable("3df8672b-803b-4e9d-b866-3b00d08264e8")]
        public string DBServer
        {
            get { return _DBServer; }
            set { _DBServer = value; }
        }

        string _TestIdentifier;

        /// <summary>
        /// Gets or sets the value of variable TestIdentifier.
        /// </summary>
        [TestVariable("38b8c5e8-db1c-4c12-af07-8465253d22fd")]
        public string TestIdentifier
        {
            get { return _TestIdentifier; }
            set { _TestIdentifier = value; }
        }

        string _RptDatabase;

        /// <summary>
        /// Gets or sets the value of variable RptDatabase.
        /// </summary>
        [TestVariable("f2f2f806-f7f5-4747-88a7-4df97bb80910")]
        public string RptDatabase
        {
            get { return _RptDatabase; }
            set { _RptDatabase = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            CheckPending(DBServer, RptDatabase, CSPUsername, CSPPassword, Authentication);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
