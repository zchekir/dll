///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CSP.General
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Reset_Password recording.
    /// </summary>
    [TestModule("b4b02ec4-a0ea-4ff3-9f62-4b93cd913772", ModuleType.Recording, 1)]
    public partial class Reset_Password : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CSP.CSPRepository repository.
        /// </summary>
        public static global::CSP.CSPRepository repo = global::CSP.CSPRepository.Instance;

        static Reset_Password instance = new Reset_Password();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Reset_Password()
        {
            RandNum = "990598";
            Password = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Reset_Password Instance
        {
            get { return instance; }
        }

#region Variables

        string _Password;

        /// <summary>
        /// Gets or sets the value of variable Password.
        /// </summary>
        [TestVariable("31c6f8ca-1713-49a1-a0c9-f7d400ca5c43")]
        public string Password
        {
            get { return _Password; }
            set { _Password = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CSPDOM.
        /// </summary>
        [TestVariable("f54fbb85-c5ac-4f6a-98d6-049472b68327")]
        public string CSPDOM
        {
            get { return repo.CSPDOM; }
            set { repo.CSPDOM = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable RandNum.
        /// </summary>
        [TestVariable("88063847-8295-4241-aa12-5e073e7388b1")]
        public string RandNum
        {
            get { return repo.RandNum; }
            set { repo.RandNum = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(0));
            Delay.Duration(5000, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'GmailInbox.ForgotPasswordLink' at UpperLeft.", repo.GmailInbox.ForgotPasswordLinkInfo, new RecordItemIndex(1));
            repo.GmailInbox.ForgotPasswordLink.Click(Location.UpperLeft, 1);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeContains (InnerText>$RandNum) on item 'CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordUsername'.", repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordUsernameInfo, new RecordItemIndex(2));
            Validate.AttributeContains(repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordUsernameInfo, "InnerText", RandNum);
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordField' at Center.", repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordFieldInfo, new RecordItemIndex(3));
            repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordField.Click(1);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordField'.", repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordFieldInfo, new RecordItemIndex(4));
            repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordField.PressKeys(Password, 1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Tab}' with focus on 'CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordField'.", repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordFieldInfo, new RecordItemIndex(5));
            repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordField.PressKeys("{Tab}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordConfirmField' at Center.", repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordConfirmFieldInfo, new RecordItemIndex(6));
            repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordConfirmField.Click(1);
            Delay.Milliseconds(90);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$Password' with focus on 'CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordConfirmField'.", repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordConfirmFieldInfo, new RecordItemIndex(7));
            repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordConfirmField.PressKeys(Password, 1);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordButton' at Center.", repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordButtonInfo, new RecordItemIndex(8));
            repo.CogstateSolutionPlatform.GenerateSecretPage.ResetPasswordButton.Click(1);
            Delay.Milliseconds(90);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
