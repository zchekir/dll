///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace CSP.General
{
    public partial class Login_Gmail
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void Select_Ranorex_Account(RepoItemInfo RanorexUserAccountMultiple, RepoItemInfo PasswordField, RepoItemInfo RanorexUserAccountSingle, RepoItemInfo EmailField, RepoItemInfo EmailNext)
        {
        	//If multiple accounts have logged in using this computer, selecetd the Ranorex Account and then enter password
        	if (RanorexUserAccountMultiple.Exists(new Duration(1000)))
        	{
        		Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RanorexUserAccountMultiple' at Center.", RanorexUserAccountMultiple);
            	RanorexUserAccountMultiple.FindAdapter<DivTag>().Click();
            	
            	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PasswordField' at Center.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().Click();
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}' with focus on 'PasswordField'.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().PressKeys("{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}", 1);
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GmailPassword' with focus on 'PasswordField'.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().PressKeys(GmailPassword, 1);
            	
        	}
        	//If ranorex user account is already selected, enter the password
        	else if (RanorexUserAccountSingle.Exists(new Duration(1000)) && repo.GoogleSignin.RanorexUserAccountSingle.InnerText == GmailAddress)
        	{
        		Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PasswordField' at Center.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().Click();
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}' with focus on 'PasswordField'.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().PressKeys("{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}", 1);
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GmailPassword' with focus on 'PasswordField'.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().PressKeys(GmailPassword, 1);
        	}
        	//Single user account is selected, but the account is not the Ranorex account. Go to generic login page and enter address manually
        	else if (RanorexUserAccountSingle.Exists(new Duration(1000)))
        	{
        		Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'RanorexUserAccountSingle' at Center.", RanorexUserAccountSingle);
        		RanorexUserAccountSingle.FindAdapter<DivTag>().Click();
        		
        		Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'UseAnotherAccount' at Center.", repo.GoogleSignin.UseAnotherAccountButtonInfo);
        		repo.GoogleSignin.UseAnotherAccountButtonInfo.FindAdapter<PTag>().Click();
        		
        		Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EmailField' at Center.", EmailField);
            	EmailField.FindAdapter<InputTag>().Click();
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}' with focus on 'EmailField'.", EmailField);
            	EmailField.FindAdapter<InputTag>().PressKeys("{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}", 1);
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GmailAddress' with focus on 'EmailField'.", EmailField);
            	EmailField.FindAdapter<InputTag>().PressKeys(GmailAddress, 1);
            	
            	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EmailNext' at Center.", EmailNext);
            	EmailNext.FindAdapter<SpanTag>().Click();
           	          	
            	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PasswordField' at Center.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().Click();
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}' with focus on 'PasswordField'.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().PressKeys("{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}", 1);
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GmailPassword' with focus on 'PasswordField'.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().PressKeys(GmailPassword, 1);	
        	}
        	//Enter Email and Password if no history is stored
        	else if (EmailField.Exists())
        	{
        		Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EmailField' at Center.", EmailField);
            	EmailField.FindAdapter<InputTag>().Click();
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}' with focus on 'EmailField'.", EmailField);
            	EmailField.FindAdapter<InputTag>().PressKeys("{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}", 1);
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GmailAddress' with focus on 'EmailField'.", EmailField);
            	EmailField.FindAdapter<InputTag>().PressKeys(GmailAddress, 1);
            	
            	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'EmailNext' at Center.", EmailNext);
            	EmailNext.FindAdapter<SpanTag>().Click();
           	          	
            	Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'PasswordField' at Center.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().Click();
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}' with focus on 'PasswordField'.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().PressKeys("{End}{LShiftKey down}{Home}{LShiftKey up}{Delete}", 1);
            	
            	Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$GmailPassword' with focus on 'PasswordField'.", PasswordField);
            	PasswordField.FindAdapter<InputTag>().PressKeys(GmailPassword, 1);
            	
        	}
        	

        }

    }
}
