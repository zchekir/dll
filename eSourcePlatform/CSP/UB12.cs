///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CSP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The UB12 recording.
    /// </summary>
    [TestModule("d5203eca-9817-46f7-a0c6-14f5d1de6ffc", ModuleType.Recording, 1)]
    public partial class UB12 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CSPRepository repository.
        /// </summary>
        public static CSPRepository repo = CSPRepository.Instance;

        static UB12 instance = new UB12();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public UB12()
        {
            workflowID = "";
            DOM = "";
            workflowToken = "";
            Batteryid = "";
            rawdata = "";
            assessmentID = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static UB12 Instance
        {
            get { return instance; }
        }

#region Variables

        string _workflowID;

        /// <summary>
        /// Gets or sets the value of variable workflowID.
        /// </summary>
        [TestVariable("a1461aa4-1a31-45a5-903a-6897d7f11efb")]
        public string workflowID
        {
            get { return _workflowID; }
            set { _workflowID = value; }
        }

        string _DOM;

        /// <summary>
        /// Gets or sets the value of variable DOM.
        /// </summary>
        [TestVariable("6d47d3b5-01d1-4ca8-ade5-f6b30efd4d43")]
        public string DOM
        {
            get { return _DOM; }
            set { _DOM = value; }
        }

        string _workflowToken;

        /// <summary>
        /// Gets or sets the value of variable workflowToken.
        /// </summary>
        [TestVariable("6e37efec-fa08-4cd8-b698-5eecb94c0c75")]
        public string workflowToken
        {
            get { return _workflowToken; }
            set { _workflowToken = value; }
        }

        string _Batteryid;

        /// <summary>
        /// Gets or sets the value of variable Batteryid.
        /// </summary>
        [TestVariable("7df3a8c3-e6f0-4838-b3c7-04c136b57f74")]
        public string Batteryid
        {
            get { return _Batteryid; }
            set { _Batteryid = value; }
        }

        string _rawdata;

        /// <summary>
        /// Gets or sets the value of variable rawdata.
        /// </summary>
        [TestVariable("17986820-2f48-49c3-a98e-58d894a66237")]
        public string rawdata
        {
            get { return _rawdata; }
            set { _rawdata = value; }
        }

        string _assessmentID;

        /// <summary>
        /// Gets or sets the value of variable assessmentID.
        /// </summary>
        [TestVariable("0be8019d-b31e-4388-bc84-7741c4ee2f9e")]
        public string assessmentID
        {
            get { return _assessmentID; }
            set { _assessmentID = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            UpdateBatteryTwelve(workflowID, DOM, workflowToken, Batteryid, rawdata);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
