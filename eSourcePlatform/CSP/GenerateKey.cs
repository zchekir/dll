///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CSP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The GenerateKey recording.
    /// </summary>
    [TestModule("4475acf7-b5f4-4f22-b1ad-fdf9f0f15d2e", ModuleType.Recording, 1)]
    public partial class GenerateKey : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CSPRepository repository.
        /// </summary>
        public static CSPRepository repo = CSPRepository.Instance;

        static GenerateKey instance = new GenerateKey();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public GenerateKey()
        {
            id = "null";
            key = "\"\"";
            contactEmail = "daryschetech@gmail.com";
            active = "true";
            I_AuthToken = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static GenerateKey Instance
        {
            get { return instance; }
        }

#region Variables

        string _id;

        /// <summary>
        /// Gets or sets the value of variable id.
        /// </summary>
        [TestVariable("7805b7e9-80b4-433a-94ae-2a96bc75775a")]
        public string id
        {
            get { return _id; }
            set { _id = value; }
        }

        string _contactEmail;

        /// <summary>
        /// Gets or sets the value of variable contactEmail.
        /// </summary>
        [TestVariable("929a7288-50e2-4c5a-a48f-7f74e144b7ce")]
        public string contactEmail
        {
            get { return _contactEmail; }
            set { _contactEmail = value; }
        }

        string _active;

        /// <summary>
        /// Gets or sets the value of variable active.
        /// </summary>
        [TestVariable("5c280f38-7956-48f4-9120-b64a2227bf44")]
        public string active
        {
            get { return _active; }
            set { _active = value; }
        }

        string _I_AuthToken;

        /// <summary>
        /// Gets or sets the value of variable I_AuthToken.
        /// </summary>
        [TestVariable("c070a634-a540-42e9-b2b6-9dd0e172bbae")]
        public string I_AuthToken
        {
            get { return _I_AuthToken; }
            set { _I_AuthToken = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable key.
        /// </summary>
        [TestVariable("a2846a82-a80e-4661-b2c1-4ea5aa352b0e")]
        public string key
        {
            get { return repo.Key; }
            set { repo.Key = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Generate_Key(id, contactEmail, active, I_AuthToken, key);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
