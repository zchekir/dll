///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace CSP.AddWorkflowPage
{
    public partial class Assign_Battery_to_Workflow
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }
        
        


        public void SelectBatteryOption()
        	
        {
        	Delay.Milliseconds(300);
        	
        	//click on dropdown to expand the list of batteries
        	Report.Log(ReportLevel.Info,"Mouse click on WorkflowBatteryDropdown");
        	repo.CogstateSolutionPlatform.AddWorkflowPage.WorkflowBatteryDropdown.Click();
        	
        	//find the battery we want and select it
        	OptionTag option = "/dom[@domain='" + CSPDOM + "']//option[@InnerText='" + BatteryName + RandNum + "']";
        	option.Focus();
        	option.Selected = true;
        	repo.CogstateSolutionPlatform.AddWorkflowPage.PropertiesTab.Click(); //Added this as a workaround so that the selected battery stays selected before saving
        	
        }

    }
}
