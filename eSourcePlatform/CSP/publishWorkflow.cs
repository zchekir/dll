///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CSP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The publishWorkflow recording.
    /// </summary>
    [TestModule("800196b0-6b42-4264-866e-bcea65bf2109", ModuleType.Recording, 1)]
    public partial class publishWorkflow : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CSPRepository repository.
        /// </summary>
        public static CSPRepository repo = CSPRepository.Instance;

        static publishWorkflow instance = new publishWorkflow();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public publishWorkflow()
        {
            CSPDOM = "";
            Token = "";
            WorkflowID = "";
            p_workflowData = "";
            BlockID = "";
            stateid_ONE = "";
            stateid_TWO = "";
            TabletConfig = "";
            Desktop = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static publishWorkflow Instance
        {
            get { return instance; }
        }

#region Variables

        string _Token;

        /// <summary>
        /// Gets or sets the value of variable Token.
        /// </summary>
        [TestVariable("2c2c303e-ae14-4bb0-9e4e-8b28638b6e46")]
        public string Token
        {
            get { return _Token; }
            set { _Token = value; }
        }

        string _WorkflowID;

        /// <summary>
        /// Gets or sets the value of variable WorkflowID.
        /// </summary>
        [TestVariable("a6fa3763-fefe-4a7f-a1e9-6299f2dcb315")]
        public string WorkflowID
        {
            get { return _WorkflowID; }
            set { _WorkflowID = value; }
        }

        string _p_workflowData;

        /// <summary>
        /// Gets or sets the value of variable p_workflowData.
        /// </summary>
        [TestVariable("6c2bbf12-25da-455e-9dda-a9c9bfe78b20")]
        public string p_workflowData
        {
            get { return _p_workflowData; }
            set { _p_workflowData = value; }
        }

        string _BlockID;

        /// <summary>
        /// Gets or sets the value of variable BlockID.
        /// </summary>
        [TestVariable("da572e69-a901-4630-9af2-28ab7c15defd")]
        public string BlockID
        {
            get { return _BlockID; }
            set { _BlockID = value; }
        }

        string _stateid_ONE;

        /// <summary>
        /// Gets or sets the value of variable stateid_ONE.
        /// </summary>
        [TestVariable("6b5fd2e0-e7f2-4f65-9ebe-d07c20b3f09b")]
        public string stateid_ONE
        {
            get { return _stateid_ONE; }
            set { _stateid_ONE = value; }
        }

        string _stateid_TWO;

        /// <summary>
        /// Gets or sets the value of variable stateid_TWO.
        /// </summary>
        [TestVariable("8fd0f4b0-5522-4556-87dd-62f99792c342")]
        public string stateid_TWO
        {
            get { return _stateid_TWO; }
            set { _stateid_TWO = value; }
        }

        string _TabletConfig;

        /// <summary>
        /// Gets or sets the value of variable TabletConfig.
        /// </summary>
        [TestVariable("5ac00588-510c-4a15-afe2-7e2c0720779f")]
        public string TabletConfig
        {
            get { return _TabletConfig; }
            set { _TabletConfig = value; }
        }

        string _Desktop;

        /// <summary>
        /// Gets or sets the value of variable Desktop.
        /// </summary>
        [TestVariable("fdb75c32-4ff8-4115-b64b-123b2de0269d")]
        public string Desktop
        {
            get { return _Desktop; }
            set { _Desktop = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CSPDOM.
        /// </summary>
        [TestVariable("5ae0aa02-a916-4d8e-a995-50d6719c7333")]
        public string CSPDOM
        {
            get { return repo.CSPDOM; }
            set { repo.CSPDOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            WorkflowPublish(Token, WorkflowID, CSPDOM, BlockID);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
