///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CSP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The addSuccessBlock recording.
    /// </summary>
    [TestModule("d8498245-af13-48dd-ba0c-4889cb6e2f8b", ModuleType.Recording, 1)]
    public partial class addSuccessBlock : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CSPRepository repository.
        /// </summary>
        public static CSPRepository repo = CSPRepository.Instance;

        static addSuccessBlock instance = new addSuccessBlock();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public addSuccessBlock()
        {
            Token = "";
            CSPDOM = "";
            BlockJsonDara = "";
            WorkflowID = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static addSuccessBlock Instance
        {
            get { return instance; }
        }

#region Variables

        string _Token;

        /// <summary>
        /// Gets or sets the value of variable Token.
        /// </summary>
        [TestVariable("904a2df6-764d-4622-bff0-e45cd56f5fd1")]
        public string Token
        {
            get { return _Token; }
            set { _Token = value; }
        }

        string _BlockJsonDara;

        /// <summary>
        /// Gets or sets the value of variable BlockJsonDara.
        /// </summary>
        [TestVariable("ebe244c1-7ad4-4a69-88c8-0f02dfdb28f1")]
        public string BlockJsonDara
        {
            get { return _BlockJsonDara; }
            set { _BlockJsonDara = value; }
        }

        string _WorkflowID;

        /// <summary>
        /// Gets or sets the value of variable WorkflowID.
        /// </summary>
        [TestVariable("dc652966-e27b-4045-abb1-7526d7572182")]
        public string WorkflowID
        {
            get { return _WorkflowID; }
            set { _WorkflowID = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CSPDOM.
        /// </summary>
        [TestVariable("eee7c247-23d5-47cd-ad1c-3117191c5393")]
        public string CSPDOM
        {
            get { return repo.CSPDOM; }
            set { repo.CSPDOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            addBlockSuccess(CSPDOM, WorkflowID, Token, BlockJsonDara);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
