///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CSP.InternalAPIModules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Get_ResetToken recording.
    /// </summary>
    [TestModule("9ecd415f-eabd-42d3-912c-00d78f3c79d2", ModuleType.Recording, 1)]
    public partial class Get_ResetToken : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CSP.CSPRepository repository.
        /// </summary>
        public static global::CSP.CSPRepository repo = global::CSP.CSPRepository.Instance;

        static Get_ResetToken instance = new Get_ResetToken();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Get_ResetToken()
        {
            DBserver = "";
            Database = "";
            Authentication = "";
            dbUsername = "";
            dbPassword = "";
            key = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Get_ResetToken Instance
        {
            get { return instance; }
        }

#region Variables

        string _DBserver;

        /// <summary>
        /// Gets or sets the value of variable DBserver.
        /// </summary>
        [TestVariable("23ed5de0-b936-40f7-88e0-8bf6399013a1")]
        public string DBserver
        {
            get { return _DBserver; }
            set { _DBserver = value; }
        }

        string _Database;

        /// <summary>
        /// Gets or sets the value of variable Database.
        /// </summary>
        [TestVariable("33d9a492-d3e2-4b73-ae5d-bbf6949e215a")]
        public string Database
        {
            get { return _Database; }
            set { _Database = value; }
        }

        string _Authentication;

        /// <summary>
        /// Gets or sets the value of variable Authentication.
        /// </summary>
        [TestVariable("f06f1069-da41-4674-8cf8-7d0426f56aa7")]
        public string Authentication
        {
            get { return _Authentication; }
            set { _Authentication = value; }
        }

        string _dbUsername;

        /// <summary>
        /// Gets or sets the value of variable dbUsername.
        /// </summary>
        [TestVariable("7f171fab-35c7-4d6e-a8d4-3f02439fb916")]
        public string dbUsername
        {
            get { return _dbUsername; }
            set { _dbUsername = value; }
        }

        string _dbPassword;

        /// <summary>
        /// Gets or sets the value of variable dbPassword.
        /// </summary>
        [TestVariable("0e466bbf-8864-43a0-b57b-a4ac51ea53bb")]
        public string dbPassword
        {
            get { return _dbPassword; }
            set { _dbPassword = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable key.
        /// </summary>
        [TestVariable("f149efa0-570c-4a8d-a3eb-ac86747536d5")]
        public string key
        {
            get { return repo.key; }
            set { repo.key = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            engine.Helpers.SQLUtility.GetRestToken(DBserver, Database, dbUsername, dbPassword, Authentication, key);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
