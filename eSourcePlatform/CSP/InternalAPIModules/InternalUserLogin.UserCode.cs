///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
//using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace CSP.InternalAPIModules
{
	public class InternalLogin
	{
		
		public string username {get;set;}
		public string password {get;set;}
		public string portal {get;set;}
		
		
		public InternalLogin(string username, string password,string portal)
		{
			this.username = username;
			this.password = password;
			this.portal = portal;
		}
		
		
		
	}
	public class loginToken
	{
		public string authToken { get; set; }
		
		
		public loginToken()
		{
			
		}
	}
	public partial class InternalUserLogin
	{
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void Internal_UserLogin()
		{
			//Setup API call
			string LoginAPI = "/api/Account/Login";
			HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create("https://"+ CSPDOM + LoginAPI);
			httpRequest.ContentType = "application/json";
			httpRequest.Method = "POST";
			
			//Create JSON ibject containing key and secret which is sent in the body
			InternalLogin jsonObject = new InternalLogin(username, password,portal);
			
			using (StreamWriter sw = new StreamWriter(httpRequest.GetRequestStream()))
			{
				string json = new JavaScriptSerializer().Serialize(jsonObject);
				
				sw.Write(json);
				sw.Flush();
				sw.Close();
			}
			
			//Get the response and read into a new object
			HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
			
			loginToken responseObject = new loginToken();
			
			using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
			{
				string response = sr.ReadToEnd();
				//Deserialise the JSON in a new object to use later
				responseObject = new JavaScriptSerializer().Deserialize<loginToken>(response);
				
				I_AuthToken = responseObject.authToken;
				
				Report.Log(ReportLevel.Info, "InternalUserToken: " + I_AuthToken);
			}
			
		}

	}
}
