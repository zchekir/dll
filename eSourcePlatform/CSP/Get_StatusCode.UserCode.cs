///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;


namespace CSP
{
	// creating constructure 
	
	public class getStatusCode
	{
		
		
	public string statusCode {get;set;}
		
	public	getStatusCode()
	{
			
	}
	}
	
    public partial class Get_StatusCode
    {
         int number;
        private void Init()
        {
            
        }

        public void GetStatus_Code(string DOM, string externalId, string visitsession, string AuthToken)
        {
        	
        	
        	if (externalId==""){
        		// generating an rundom number to be used as externalid
        		Random r = new Random();
                number = r.Next(1,999999);
        		externalId = number.ToString();
        		
        		
        	}else{
        		
        	Report.Log(ReportLevel.Info, "The externalid is generated from workflowinstance call" );
        	}
        	
        	// Setting up Get status API call header:
        	string url="https://"+DOM +"/api/External/Status/"+externalId+"/"+visitsession;
        	HttpWebRequest httpRequest =(HttpWebRequest)WebRequest.Create(url);
        	httpRequest.ContentType = "application/json";
        	httpRequest.Method="Get";
        	httpRequest.Headers.Add("Authorization", AuthToken);
        	
        	HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
        	
        	//CreateObject:
        	getStatusCode responseObject = new getStatusCode();
        	
        	using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
        	
        	{
        		
        		string response= sr.ReadToEnd();
        		responseObject = new JavaScriptSerializer().Deserialize<getStatusCode>(response);
        		string StatusCode = responseObject.statusCode; 
        		Report.Log(ReportLevel.Info, "StatusCode is:"+ StatusCode );
        		
        	}
        	
            
        }

    }
}
