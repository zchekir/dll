///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
//using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace CSP
{
    public partial class OutComesAPI
    {
       public class AuthJSONResponse
		
	{
		
		
		public string compositeOutcome { get; set; }
		public string CompositeOutcomeBeta { get; set; }
		
		public AuthJSONResponse()
		{
			
		}
	}
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void OutComeAPI()
        {
            // TODO: Replace the following line with your code implementation.
            throw new NotImplementedException();
        }

           public void OutcomeAPI(string Token, string TestIdentifier, string StudyProtocol, string DOM)
          {
            
        	//variable
			string url = "https://" + DOM + "/api/external/v2/" + StudyProtocol + "/AssessmentAttempt/"+ TestIdentifier + "/Outcomes";
			//Setup API call
			HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create(url);
			httpRequest.ContentType = "application/json";
			httpRequest.Method = "POST";
			httpRequest.Headers.Add("Authorization", Token);
			
			// generating an rundom number to be used as externalid
			
        	HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
        	
        	AuthJSONResponse responseObject = new AuthJSONResponse();
        	
        	
        	
        	using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
        	{
        		string response = sr.ReadToEnd();
        		//Deserialise the JSON in a new object to use later
        		responseObject = new JavaScriptSerializer().Deserialize<AuthJSONResponse>(response);
        		
        		
        		string Outcome1 = responseObject.compositeOutcome;
        		string Outcome2 = responseObject.CompositeOutcomeBeta;
        		Report.Log(ReportLevel.Info, " OutComes " + Outcome1 + Outcome2);
        	}
        }

    }
}
