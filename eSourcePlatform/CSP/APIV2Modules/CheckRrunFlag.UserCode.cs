///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

//using Ranorex.Core.Testing

namespace CSP.APIV2Modules
{
	public partial class CheckRrunFlag
		
	{
		public static DataTable dt = new DataTable();
		/// <summary>
		/// This method gets called right after the recording has been started.
		/// It can be used to execute recording specific initialization code.
		/// </summary>
		private void Init()
		{
			// Your recording specific initialization code goes here.
		}

		public void RrunFlag(string dbserver, string database, string username, string password, string authentication, string ExternalID)
		{
			Report.Log(ReportLevel.Info, "zak: " +  ExternalID );
			
			dt.Reset();
			
			// QueryDB
			string query = @"SELECT  PRWI.[Id]
      ,workflow.wkflowinstance.RerunWorkflow
	  ,P.IQnumber
	  ,PRWI.TestIdentifier
   FROM [UserData].[PRWorkflowInstance] PRWI
   LEFT JOIN workflow.wkflowinstance on workflow.wkflowinstance.id=PRWI.id
   LEFT JOIN workflow.WkflowDefWkflowStat on workflow.WkflowDefWkflowStat.id= workflow.wkflowinstance.CurWkflowDefWkflowStatId
   LEFT JOIN Workflow.WkflowStat on Workflow.WkflowStat.id=workflow.WkflowDefWkflowStat.WkflowStatId
   LEFT JOIN [Reference].[QualificationStatusType] QST ON QST.Id=PRWI.QualificationStatus
   LEFT JOIN UserData.[Part] P ON P.Id=PRWI.ParticipantId
   LEFT JOIN [Reference].[QualificationStatusType] qs2 ON PRWI.QualificationStatus=qs2.Id
   left join userdata.person on userdata.person.id=p.personid
   left join userdata.[user] on  userdata.[user].personid=p.personid
   where P.IQnumber =@ExternalID";
			
			//Connecting to SQL DB:
			string sqlConnString = string.Format("Server={0};Database={1};User Id={2};Password={3};Authentication={4};Connection Timeout={5};", dbserver, database, username, password, authentication, "30");
			//CreateObject:
			SqlDataAdapter da = new SqlDataAdapter(query, sqlConnString);
			da.SelectCommand.Parameters.AddWithValue("@ExternalID", ExternalID);
			// Get the data from DB
			using (da)
			{
				da.Fill(dt);
			}
			
			string Flag = dt.Rows[0][1].ToString();
			string IQ = dt.Rows[0][2].ToString();
			
			
			if (Flag==""){
				
				Report.Log(ReportLevel.Info, "Flag is NULL " );
				Report.Log(ReportLevel.Info, "IQNumber: " + IQ );
			}else{
				
				Report.Log(ReportLevel.Info, "Flag: " + Flag );
				Report.Log(ReportLevel.Info, "IQNumber: " + IQ );
			}
			
			
			
		}
	}

}

