///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CSP.StudiesPage
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Select_Existing_Study recording.
    /// </summary>
    [TestModule("8f769f95-c08c-4671-bb6b-e41ddcf23a95", ModuleType.Recording, 1)]
    public partial class Select_Existing_Study : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::CSP.CSPRepository repository.
        /// </summary>
        public static global::CSP.CSPRepository repo = global::CSP.CSPRepository.Instance;

        static Select_Existing_Study instance = new Select_Existing_Study();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Select_Existing_Study()
        {
            ExistingStudy = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Select_Existing_Study Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable CSPDOM.
        /// </summary>
        [TestVariable("f54fbb85-c5ac-4f6a-98d6-049472b68327")]
        public string CSPDOM
        {
            get { return repo.CSPDOM; }
            set { repo.CSPDOM = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable ExistingStudy.
        /// </summary>
        [TestVariable("2f6dab4e-6039-4a62-a02b-3d61b7395d34")]
        public string ExistingStudy
        {
            get { return repo.ExistingStudy; }
            set { repo.ExistingStudy = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.SearchStudy' at Center.", repo.CogstateSolutionPlatform.SearchStudyInfo, new RecordItemIndex(0));
            repo.CogstateSolutionPlatform.SearchStudy.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence from variable '$ExistingStudy' with focus on 'CogstateSolutionPlatform.SearchStudy'.", repo.CogstateSolutionPlatform.SearchStudyInfo, new RecordItemIndex(1));
            repo.CogstateSolutionPlatform.SearchStudy.PressKeys(ExistingStudy);
            Delay.Milliseconds(0);
            
            // Wait for results to load
            Report.Log(ReportLevel.Info, "Section", "Wait for results to load", new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 3.5s.", new RecordItemIndex(3));
            Delay.Duration(3500, false);
            
            // Continue on with Tests
            Report.Log(ReportLevel.Info, "Section", "Continue on with Tests", new RecordItemIndex(4));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.MainToolbar.CardButton' at Center.", repo.CogstateSolutionPlatform.MainToolbar.CardButtonInfo, new RecordItemIndex(5));
            repo.CogstateSolutionPlatform.MainToolbar.CardButton.Click(100);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'CogstateSolutionPlatform.StudyCards.ExistingStudyCard' at Center.", repo.CogstateSolutionPlatform.StudyCards.ExistingStudyCardInfo, new RecordItemIndex(6));
            repo.CogstateSolutionPlatform.StudyCards.ExistingStudyCard.Click();
            Delay.Milliseconds(200);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 5s.", new RecordItemIndex(7));
            Delay.Duration(5000, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
