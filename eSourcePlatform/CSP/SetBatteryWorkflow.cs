///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace CSP
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetBatteryWorkflow recording.
    /// </summary>
    [TestModule("b4546a75-f491-464e-b1d9-93673cd91198", ModuleType.Recording, 1)]
    public partial class SetBatteryWorkflow : ITestModule
    {
        /// <summary>
        /// Holds an instance of the CSPRepository repository.
        /// </summary>
        public static CSPRepository repo = CSPRepository.Instance;

        static SetBatteryWorkflow instance = new SetBatteryWorkflow();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetBatteryWorkflow()
        {
            CSPDOM = "";
            StudyID = "";
            Token = "";
            WorkflowID = "";
            BatteryID = "";
            battryworkflowData = "";
            WorkflowBlockID = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetBatteryWorkflow Instance
        {
            get { return instance; }
        }

#region Variables

        string _StudyID;

        /// <summary>
        /// Gets or sets the value of variable StudyID.
        /// </summary>
        [TestVariable("8725def3-eb5f-415b-a070-d6a527b45ccb")]
        public string StudyID
        {
            get { return _StudyID; }
            set { _StudyID = value; }
        }

        string _Token;

        /// <summary>
        /// Gets or sets the value of variable Token.
        /// </summary>
        [TestVariable("0c9bd693-3b08-4060-a1e1-e8ab4a71d425")]
        public string Token
        {
            get { return _Token; }
            set { _Token = value; }
        }

        string _WorkflowID;

        /// <summary>
        /// Gets or sets the value of variable WorkflowID.
        /// </summary>
        [TestVariable("157a1573-135b-4c82-8a48-c2f607067a5c")]
        public string WorkflowID
        {
            get { return _WorkflowID; }
            set { _WorkflowID = value; }
        }

        string _BatteryID;

        /// <summary>
        /// Gets or sets the value of variable BatteryID.
        /// </summary>
        [TestVariable("96814775-6349-4a06-ad1f-77e301ff6496")]
        public string BatteryID
        {
            get { return _BatteryID; }
            set { _BatteryID = value; }
        }

        string _battryworkflowData;

        /// <summary>
        /// Gets or sets the value of variable battryworkflowData.
        /// </summary>
        [TestVariable("092f8040-dca2-4bf9-9f22-9cda444d12b7")]
        public string battryworkflowData
        {
            get { return _battryworkflowData; }
            set { _battryworkflowData = value; }
        }

        string _WorkflowBlockID;

        /// <summary>
        /// Gets or sets the value of variable WorkflowBlockID.
        /// </summary>
        [TestVariable("177ac509-fdf5-4906-a0aa-b07e555ca393")]
        public string WorkflowBlockID
        {
            get { return _WorkflowBlockID; }
            set { _WorkflowBlockID = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable CSPDOM.
        /// </summary>
        [TestVariable("36565d73-70ab-430e-a080-310474051032")]
        public string CSPDOM
        {
            get { return repo.CSPDOM; }
            set { repo.CSPDOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            SetBatteryWorkf(StudyID, Token, WorkflowID, BatteryID, CSPDOM, battryworkflowData, WorkflowBlockID);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
