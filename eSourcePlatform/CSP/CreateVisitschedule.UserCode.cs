///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////


using System;
using System.Collections.Generic;
using System.Drawing;
using System.IO;
using System.Net;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Web.Script.Serialization;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;
using Newtonsoft.Json.Linq;

namespace CSP
{
   public class visitJSONRequest
	{
		public string JsonData { get; set; }
		public string id { get; set; }
	
	/// Object for creating a new workflow request
		public visitJSONRequest()
		{
			
		
		}
		
	}





	public partial class CreateVisitschedule
    {
        
        private void Init()
        {
            
        }

        public void Visitschedulecreation(string Token, string Studyid, string VisitCode, string CSPDOM, string VisitSceduleData)
        {
           
        	 //variable
		    string url = "https://" + CSPDOM + "/api/studies/" + Studyid + "/visitSchedules";
			//Setup API call
			HttpWebRequest httpRequest = (HttpWebRequest)WebRequest.Create(url);
			httpRequest.ContentType = "application/json";
			httpRequest.Method = "POST";
			httpRequest.Headers.Add("Authorization", Token);
			
			string visitName= "APITest";
			
			// generating an rundom number to be used as externalid
			Random r = new Random();
			int number = r.Next(1,999999);
			string rNumber = number.ToString();
			
			// sending the data in the body and replacing the studyid, studyname and version
			using (StreamWriter sw = new StreamWriter(httpRequest.GetRequestStream()))
			{
		 	
		    
               var testData = VisitSceduleData.Replace(@"<studid>", Studyid).Replace(@"<visitcode>", rNumber).Replace(@"<name>", visitName +rNumber);
				Report.Info("Data to send: " + testData);
				
				sw.Write(testData);
				sw.Flush();
				sw.Close();
			}
			
			
			
			
			
			//Get response and store in new object
			HttpWebResponse httpResponse = (HttpWebResponse)httpRequest.GetResponse();
			
			visitJSONRequest responseObject = new visitJSONRequest();
			
			using (StreamReader sr = new StreamReader(httpResponse.GetResponseStream()))
			{
				string response = sr.ReadToEnd();
				
				responseObject = new JavaScriptSerializer().Deserialize<visitJSONRequest>(response);
				string visitscheduleid= responseObject.id;
				Report.Log(ReportLevel.Info, "visitschedule is created as expected " + visitscheduleid);
			 }






        	
        }

    }
}
