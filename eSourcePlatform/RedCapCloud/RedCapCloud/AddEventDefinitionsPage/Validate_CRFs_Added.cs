///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace RedCapCloud.AddEventDefinitionsPage
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The Validate_CRFs_Added recording.
    /// </summary>
    [TestModule("55026c2e-7197-4596-8c0c-6275a4b2fc64", ModuleType.Recording, 1)]
    public partial class Validate_CRFs_Added : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::RedCapCloud.RedCapCloudRepository repository.
        /// </summary>
        public static global::RedCapCloud.RedCapCloudRepository repo = global::RedCapCloud.RedCapCloudRepository.Instance;

        static Validate_CRFs_Added instance = new Validate_CRFs_Added();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public Validate_CRFs_Added()
        {
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static Validate_CRFs_Added Instance
        {
            get { return instance; }
        }

#region Variables

        /// <summary>
        /// Gets or sets the value of variable DOM.
        /// </summary>
        [TestVariable("6f24cf1a-0e47-4c45-9ce6-3e042db234d2")]
        public string DOM
        {
            get { return repo.DOM; }
            set { repo.DOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Begin Cogstate Battery') on item 'REDCapCloud.EventDefinitionPage.BeginCogstateBatteryCRF'.", repo.REDCapCloud.EventDefinitionPage.BeginCogstateBatteryCRFInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.REDCapCloud.EventDefinitionPage.BeginCogstateBatteryCRFInfo, "InnerText", "Begin Cogstate Battery");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Cogstate Battery Comments') on item 'REDCapCloud.EventDefinitionPage.CogstateBatteryCommentsCRF'.", repo.REDCapCloud.EventDefinitionPage.CogstateBatteryCommentsCRFInfo, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.REDCapCloud.EventDefinitionPage.CogstateBatteryCommentsCRFInfo, "InnerText", "Cogstate Battery Comments");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Cogstate Battery Data Confirmation') on item 'REDCapCloud.EventDefinitionPage.CogstateBatteryDataConfirmationCRF'.", repo.REDCapCloud.EventDefinitionPage.CogstateBatteryDataConfirmationCRFInfo, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.REDCapCloud.EventDefinitionPage.CogstateBatteryDataConfirmationCRFInfo, "InnerText", "Cogstate Battery Data Confirmation");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Cogstate Battery CRF - CBB') on item 'REDCapCloud.EventDefinitionPage.CogstateBatteryCRFCBB'.", repo.REDCapCloud.EventDefinitionPage.CogstateBatteryCRFCBBInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.REDCapCloud.EventDefinitionPage.CogstateBatteryCRFCBBInfo, "InnerText", "Cogstate Battery CRF - CBB");
            Delay.Milliseconds(100);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (InnerText='Cogstate Battery CRF - Composite Outcomes') on item 'REDCapCloud.EventDefinitionPage.CogstateBatteryCRFCompositeOutcome'.", repo.REDCapCloud.EventDefinitionPage.CogstateBatteryCRFCompositeOutcomeInfo, new RecordItemIndex(4));
            Validate.AttributeEqual(repo.REDCapCloud.EventDefinitionPage.CogstateBatteryCRFCompositeOutcomeInfo, "InnerText", "Cogstate Battery CRF - Composite Outcomes");
            Delay.Milliseconds(100);
            
            Report.Screenshot(ReportLevel.Info, "User", "CRFs Added Successfully", repo.REDCapCloud.Self, false, new RecordItemIndex(5));
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
