///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Drawing;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using WinForms = System.Windows.Forms;
using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace Eisai.APIModules
{
    public partial class NewCaptureworkflowstateID
    {
        //variables:
		public static DataTable dt = new DataTable();
        private void Init()
        {
            
        }

        public void WorkflowstateID(string DBServer, string Database, string dbUsername, string dbPassword, string Authentication, string stateid_FOUR, string stuid, string rolid)
        {
            Report.Log(ReportLevel.Info,  "studyID : " + "  " + stuid );

        	//Validating the Reporting DB Version :
			
			dt.Reset();
			
			
			// QueryDB
			string query = @"SELECT 
                           id
                           FROM [Study].[StudRol]
                           where [Name]='External Service' and (studid=@stuid)";
                           
                           
			
			
			
			Report.Info( "Validating Reporting DB version");
		
				
			//Connecting to SQL DB:
			string sqlConnString = string.Format("Server={0};Database={1};User Id={2};Password={3};Authentication={4};Connection Timeout={5};", DBServer, Database, dbUsername, dbPassword, Authentication, "30");
			//CreateObject:
			SqlDataAdapter da = new SqlDataAdapter(query, sqlConnString);
			
			da.SelectCommand.Parameters.AddWithValue("@id", stuid);
			da.SelectCommand.Parameters.AddWithValue("@stuid", stuid);
			// Get the data from DB
			try{
				
				using (da)
					da.Fill(dt);
				
				
				string[] wfstateid= new string[dt.Rows.Count];
				
				for (int i = 0; i < dt.Rows.Count; i++)
               {
					wfstateid[i]=dt.Rows[i][0].ToString();
					
    
                }
				
				    newrolid =wfstateid[0] ;
					
                 


				
				
				
				//Pringting the resutls:
				Report.Log(ReportLevel.Info,  "RoleID : " + "  " + newrolid);
			   
				
				
			}catch (Exception e){
				
				Report.Log(ReportLevel.Info,  "Error: " + e.Message );
			}
        }

    }
}
