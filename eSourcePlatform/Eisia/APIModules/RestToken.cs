///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Eisia.APIModules
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The RestToken recording.
    /// </summary>
    [TestModule("89bb46fb-a3a0-4202-b553-20eb0aba786e", ModuleType.Recording, 1)]
    public partial class RestToken : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::Eisia.EisiaRepository repository.
        /// </summary>
        public static global::Eisia.EisiaRepository repo = global::Eisia.EisiaRepository.Instance;

        static RestToken instance = new RestToken();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public RestToken()
        {
            DBserver = "";
            Database = "";
            Authentication = "";
            dbUsername = "";
            dbPassword = "";
            NewKey = "";
            ResetToken = "";
            TokenKey = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static RestToken Instance
        {
            get { return instance; }
        }

#region Variables

        string _DBserver;

        /// <summary>
        /// Gets or sets the value of variable DBserver.
        /// </summary>
        [TestVariable("19a511ef-68fe-4d23-97db-32acd0c08e32")]
        public string DBserver
        {
            get { return _DBserver; }
            set { _DBserver = value; }
        }

        string _Database;

        /// <summary>
        /// Gets or sets the value of variable Database.
        /// </summary>
        [TestVariable("1a9e936a-485c-4159-9d21-d343e0d8e38f")]
        public string Database
        {
            get { return _Database; }
            set { _Database = value; }
        }

        string _Authentication;

        /// <summary>
        /// Gets or sets the value of variable Authentication.
        /// </summary>
        [TestVariable("8400623f-fd17-458b-9fb0-a83e4ad6feeb")]
        public string Authentication
        {
            get { return _Authentication; }
            set { _Authentication = value; }
        }

        string _dbUsername;

        /// <summary>
        /// Gets or sets the value of variable dbUsername.
        /// </summary>
        [TestVariable("a5695f59-4433-4c40-aa70-bf7dd01b30c5")]
        public string dbUsername
        {
            get { return _dbUsername; }
            set { _dbUsername = value; }
        }

        string _dbPassword;

        /// <summary>
        /// Gets or sets the value of variable dbPassword.
        /// </summary>
        [TestVariable("7dd69579-3cc7-4838-b440-9f85b73de23e")]
        public string dbPassword
        {
            get { return _dbPassword; }
            set { _dbPassword = value; }
        }

        string _NewKey;

        /// <summary>
        /// Gets or sets the value of variable NewKey.
        /// </summary>
        [TestVariable("4ee22833-99bc-4cbd-b804-5a9242f7c348")]
        public string NewKey
        {
            get { return _NewKey; }
            set { _NewKey = value; }
        }

        string _ResetToken;

        /// <summary>
        /// Gets or sets the value of variable ResetToken.
        /// </summary>
        [TestVariable("bf55a1ab-9c1e-4208-9f54-8a5407aa9b00")]
        public string ResetToken
        {
            get { return _ResetToken; }
            set { _ResetToken = value; }
        }

        string _TokenKey;

        /// <summary>
        /// Gets or sets the value of variable TokenKey.
        /// </summary>
        [TestVariable("60c27da7-9b5a-4d4a-be0f-c2ad53d55606")]
        public string TokenKey
        {
            get { return _TokenKey; }
            set { _TokenKey = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            _RestToken(DBserver, Database, Authentication, dbUsername, dbPassword, NewKey);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
