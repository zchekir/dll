///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Eisia
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The InternalUserCreation recording.
    /// </summary>
    [TestModule("ef258eb9-653e-42c5-9800-82552a0d53b2", ModuleType.Recording, 1)]
    public partial class InternalUserCreation : ITestModule
    {
        /// <summary>
        /// Holds an instance of the EisiaRepository repository.
        /// </summary>
        public static EisiaRepository repo = EisiaRepository.Instance;

        static InternalUserCreation instance = new InternalUserCreation();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public InternalUserCreation()
        {
            DBServer = "cgst-qc.database.windows.net";
            Database = "";
            dbUsername = "";
            dbPassword = "";
            Authentication = "Active Directory Password";
            NewInternalPassword = "";
            NewInternalUsername = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static InternalUserCreation Instance
        {
            get { return instance; }
        }

#region Variables

        string _DBServer;

        /// <summary>
        /// Gets or sets the value of variable DBServer.
        /// </summary>
        [TestVariable("9040c637-40d5-4851-a551-69f2220cecfd")]
        public string DBServer
        {
            get { return _DBServer; }
            set { _DBServer = value; }
        }

        string _Database;

        /// <summary>
        /// Gets or sets the value of variable Database.
        /// </summary>
        [TestVariable("f3936ba2-ce55-4880-b194-31d5b4cfa4f1")]
        public string Database
        {
            get { return _Database; }
            set { _Database = value; }
        }

        string _dbUsername;

        /// <summary>
        /// Gets or sets the value of variable dbUsername.
        /// </summary>
        [TestVariable("22ba80ba-364a-4718-9481-3425424c2be1")]
        public string dbUsername
        {
            get { return _dbUsername; }
            set { _dbUsername = value; }
        }

        string _dbPassword;

        /// <summary>
        /// Gets or sets the value of variable dbPassword.
        /// </summary>
        [TestVariable("fb72c660-93af-470e-bdc5-c4958d71683d")]
        public string dbPassword
        {
            get { return _dbPassword; }
            set { _dbPassword = value; }
        }

        string _Authentication;

        /// <summary>
        /// Gets or sets the value of variable Authentication.
        /// </summary>
        [TestVariable("b8ac744e-4bc1-4cbe-866c-41fe1febce7c")]
        public string Authentication
        {
            get { return _Authentication; }
            set { _Authentication = value; }
        }

        string _NewInternalPassword;

        /// <summary>
        /// Gets or sets the value of variable NewInternalPassword.
        /// </summary>
        [TestVariable("65da0ca2-1f5e-42b2-b525-e12ade83e3a3")]
        public string NewInternalPassword
        {
            get { return _NewInternalPassword; }
            set { _NewInternalPassword = value; }
        }

        string _NewInternalUsername;

        /// <summary>
        /// Gets or sets the value of variable NewInternalUsername.
        /// </summary>
        [TestVariable("8537cd77-9057-49c1-bba3-b09967623e23")]
        public string NewInternalUsername
        {
            get { return _NewInternalUsername; }
            set { _NewInternalUsername = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            NewInternalUser(DBServer, Database, dbUsername, dbPassword, Authentication, NewInternalPassword, NewInternalUsername);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
