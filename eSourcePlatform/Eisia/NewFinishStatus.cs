///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace Eisia
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The NewFinishStatus recording.
    /// </summary>
    [TestModule("b2cd1439-9219-4bd8-b222-3035b62f28c6", ModuleType.Recording, 1)]
    public partial class NewFinishStatus : ITestModule
    {
        /// <summary>
        /// Holds an instance of the EisiaRepository repository.
        /// </summary>
        public static EisiaRepository repo = EisiaRepository.Instance;

        static NewFinishStatus instance = new NewFinishStatus();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public NewFinishStatus()
        {
            Toke = "";
            WorkflowID = "";
            SetStatusID = "";
            SestJSON = "";
            CPADOM = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static NewFinishStatus Instance
        {
            get { return instance; }
        }

#region Variables

        string _Toke;

        /// <summary>
        /// Gets or sets the value of variable Toke.
        /// </summary>
        [TestVariable("22d17604-47b8-4533-bbeb-a3a8e3599a3f")]
        public string Toke
        {
            get { return _Toke; }
            set { _Toke = value; }
        }

        string _WorkflowID;

        /// <summary>
        /// Gets or sets the value of variable WorkflowID.
        /// </summary>
        [TestVariable("a6013c7f-74db-459b-8bf8-822c838d6ee7")]
        public string WorkflowID
        {
            get { return _WorkflowID; }
            set { _WorkflowID = value; }
        }

        string _SetStatusID;

        /// <summary>
        /// Gets or sets the value of variable SetStatusID.
        /// </summary>
        [TestVariable("0955e2c1-773e-40e4-a30b-b6c5ab902ebc")]
        public string SetStatusID
        {
            get { return _SetStatusID; }
            set { _SetStatusID = value; }
        }

        string _SestJSON;

        /// <summary>
        /// Gets or sets the value of variable SestJSON.
        /// </summary>
        [TestVariable("22b4a8b7-91d5-4130-8c5d-c40c32926a37")]
        public string SestJSON
        {
            get { return _SestJSON; }
            set { _SestJSON = value; }
        }

        string _CPADOM;

        /// <summary>
        /// Gets or sets the value of variable CPADOM.
        /// </summary>
        [TestVariable("44a1de3d-0689-490c-9a93-de2aea9b3cff")]
        public string CPADOM
        {
            get { return _CPADOM; }
            set { _CPADOM = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.3")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            FinishStatus(Toke, WorkflowID, SetStatusID, SestJSON, CPADOM);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
